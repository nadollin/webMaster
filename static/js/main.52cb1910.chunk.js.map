{"version":3,"sources":["layout/navBar/Navbar.js","layout/sideMenu/SideMenu.js","components/codeView/CodeView.js","components/detailView/DetailView.js","components/preview/Preview.js","components/heading/tags/H1.js","components/heading/tags/H2.js","components/heading/tags/H3.js","components/heading/tags/H4.js","components/heading/tags/H5.js","components/heading/tags/H6.js","components/heading/Heading.js","components/paragraph/tags/P.js","components/paragraph/Paragraph.js","components/image/tags/Image.js","components/image/Image.js","components/link/tags/A.js","components/link/Link.js","components/list/tags/UL.js","components/list/tags/OL.js","components/list/List.js","components/table/tags/TABLE.js","components/table/Table.js","layout/mainView/MainView.js","home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","placeholder","aria-label","getList","list","name","viewList","map","item","index","push","key","to","SideMenu","props","htmlList","componentList","html","cssList","css","data-feather","CodeView","wrapLines","language","style","tomorrowNight","customStyle","whiteSpace","codeString","DetailView","detail","Preview","preview","H1","useEffect","tagDidMount","ref","tagRef","attrs","class","content","H2","H3","H4","H5","H6","Heading","useState","tag","setTag","setContent","setCodeString","React","createRef","setAttrs","current","outerHTML","getCodeString","tags","tagsComponent","h1","h2","h3","h4","h5","h6","attrList","value","htmlFor","id","onChange","e","newAttrs","JSON","parse","stringify","handleAttrsChange","target","handleTagChange","getDetail","TagComponent","getPreview","P","console","log","indexOf","dangerouslySetInnerHTML","__html","replace","Paragraph","setContnet","p","Image","src","width","height","alt","img","Img","A","Link","a","UL","contentList","childClass","OL","List","onItemChange","method","newContentList","splice","ul","ol","handleContentChange","onClick","length","TABLE","hasHead","tableList","head","title","body","row","rIndex","col","cIndex","hasFoot","footer","Table","setTable","useTh","rowCount","columnCount","handleTableListChange","newTableList","theadTab","tbodyTab","tfooterTab","trTab","regexRemoveLine","onTrChange","newRow","i","pop","onTdChange","table","checked","MainView","role","path","tagList","abbrList","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52cb1910.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Navbar() {\n  return (\n    \n    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#\">Web Master</a>\n      <input className=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"/>\n      <ul className=\"navbar-nav px-3\">\n        {/* <li className=\"nav-item text-nowrap\">\n          <a className=\"nav-link\" href=\"#\">Sign out</a>\n        </li> */}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\nfunction SideMenu(props) {\n  let htmlList = getList(props.componentList.html,'html');\n  let cssList = getList(props.componentList.css,'css');\n\n  return (\n    <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div className=\"sidebar-sticky\">\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>HTML</span>\n          <a className=\"d-flex align-items-center text-muted\" href=\"#\">\n            <span data-feather=\"plus-circle\"></span>\n          </a>\n        </h6>\n        {htmlList}\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>CSS</span>\n          <a className=\"d-flex align-items-center text-muted\" href=\"#\">\n            <span data-feather=\"plus-circle\"></span>\n          </a>\n        </h6>\n        {cssList}\n     \n      </div>\n    </nav>\n\n  );\n}\n\nfunction getList(list,name){\n    let viewList = [];\n    list.map((item,index)=>{\n      viewList.push(\n        <li className=\"nav-item\" key={name + \"-\" + index}>\n          <Link className=\"nav-link \" to={\"/\" + item.type}>\n            <span></span>\n            {item.type}\n            {/* <span className=\"sr-only\">(current)</span> */}\n          </Link>\n        </li>\n      )\n    })\n    return (\n      <ul className=\"nav flex-column\">\n        {viewList}\n      </ul>\n    );\n}\n\nexport default SideMenu;\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nfunction CodeView(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          CodeView\n        </div>\n        <div className=\"card-body\">\n          <SyntaxHighlighter wrapLines={true} language=\"html\"\n           style={tomorrowNight} customStyle={{whiteSpace: 'pre-wrap'}}>\n            {props.codeString}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CodeView;\n","import React from 'react';\n\nfunction DetailView(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Detail\n        </div>\n        <div className=\"card-body\">\n            {props.detail}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DetailView;","import React from 'react';\n\nfunction Preview(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Preview\n        </div>\n        <div className=\"card-body\">\n          {props.preview}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Preview;","import React , {useEffect} from 'react';\n\nfunction H1(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <h1 ref={props.tagRef} className={props.attrs.class}>{props.content}</h1>\n  );\n}\n\n\nexport default H1;\n","import React , {useEffect}from 'react';\n\nfunction H2(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h2 ref={props.tagRef} className={props.attrs.class}>{props.content}</h2>\n  );\n}\n\n\nexport default H2;\n","import React , {useEffect}from 'react';\n\nfunction H3(props) {\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h3 ref={props.tagRef} className={props.attrs.class}>{props.content}</h3>\n  );\n}\n\n\nexport default H3;\n","import React , {useEffect} from 'react';\n\nfunction H4(props) {\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h4 ref={props.tagRef} className={props.attrs.class}>{props.content}</h4>\n  );\n}\n\n\nexport default H4;\n","import React, {useEffect}  from 'react';\n\nfunction H5(props) {\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h5 ref={props.tagRef} className={props.attrs.class}>{props.content}</h5>\n  );\n}\n\n\nexport default H5;\n","import React, {useEffect} from 'react';\n\nfunction H6(props) {\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h6 ref={props.tagRef} className={props.attrs.class}>{props.content}</h6>\n  );\n}\n\n\nexport default H6;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport H1 from './tags/H1';\nimport H2 from './tags/H2';\nimport H3 from './tags/H3';\nimport H4 from './tags/H4';\nimport H5 from './tags/H5';\nimport H6 from './tags/H6';\n\nfunction Heading() {\n  const [tag, setTag] = useState('h1'); \n  const [content, setContent] = useState('Heading'); \n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n  const [attrs, setAttrs] = useState({\n    class : \"\"\n  }); \n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleContentChange(value) {\n    setContent(value);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n\n  const tags =[\n    'h1','h2','h3','h4','h5','h6'\n  ];\n  const tagsComponent = {\n    h1 : H1,\n    h2 : H2,\n    h3 : H3,\n    h4 : H4,\n    h5 : H5,\n    h6 : H6,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} content={content} attrs={attrs}/>;\n    \n  }\n  \n  function getDetail(){\n    let attrList = [];\n    for(const key in attrs){\n      let value = attrs[key];\n      attrList.push(\n        <div className=\"form-group\" key={'attrs-' + key}>\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{key}</label>\n              <div className=\" col-sm-10\">\n                <input className=\"form-control\" value={value} type=\"text\" id={key} name={key} \n                onChange={(e)=>{handleAttrsChange(key,e.target.value)}}/>\n              </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Content</label>\n              <div className=\" col-sm-10\">\n                 <input type=\"text\" className=\"form-control\" value={content} onChange={(e)=>handleContentChange(e.target.value)}/>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                     \n                  </select>\n              </div>\n          </div>\n        </div>\n        {attrList}\n\n      </div>\n    \n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Heading </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Heading;\n","import React , {useEffect} from 'react';\n\nfunction P(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n    console.log(props.content.indexOf('\\n'));\n  });\n  function getContent(){\n    var regex = /\\n/gi;\n    return {__html: props.content.replace(regex, '</br>')};\n  }\n  return (\n    <p ref={props.tagRef} className={props.attrs.class} dangerouslySetInnerHTML={getContent()} />\n  );\n}\n\n\nexport default P;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport P from './tags/P';\n\nfunction Paragraph() {\n  const [tag, setTag] = useState('p'); \n  const [content, setContnet] = useState('Paragraphs'); \n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n  const [attrs, setAttrs] = useState({\n    class : \"\"\n  }); \n\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleContentChange(value) {\n    setContnet(value);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n\n  const tags =[\n    'p'\n  ];\n  const tagsComponent = {\n    p : P,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} content={content} attrs={attrs}/>;\n    \n  }\n  \n  function getDetail(){\n    let attrList = [];\n    for(const key in attrs){\n      let value = attrs[key];\n      attrList.push(\n        <div className=\"form-group\" key={'attrs-' + key}>\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{key}</label>\n              <div className=\" col-sm-10\">\n                <input className=\"form-control\" value={value} type=\"text\" id={key} name={key} \n                onChange={(e)=>{handleAttrsChange(key,e.target.value)}}/>\n              </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <div className=\"form-group\">\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Content</label>\n                <div className=\" col-sm-10\">\n                   <textarea className=\"form-control\" value={content} onChange={(e)=>handleContentChange(e.target.value)}></textarea>\n                </div>\n            </div>\n          </div>\n      \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n        {attrList}\n      </div>\n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Paragraphs </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Paragraph;\n","import React , {useEffect} from 'react';\n\nfunction Image(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <img ref={props.tagRef} className={props.attrs.class}\n    src={props.attrs.src} \n    width={props.attrs.width} height={props.attrs.height} \n    alt={props.attrs.alt}/>\n  );\n}\n\n\nexport default Image;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport Img from './tags/Image';\n\nfunction Image() {\n  const [tag, setTag] = useState('img'); \n  const [attrs, setAttrs] = useState({\n    width:140,\n    height:140,\n    src: \"https://img.bobowin.blog/uploads/20190320152911_6.jpg\",\n    alt : \"myPhoto\",\n    class : \"rounded-circle\"\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  const tags =[\n    'img'\n  ];\n  const tagsComponent = {\n    img : Img,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs}/>;\n    \n  }\n  \n  function getDetail(){\n    let attrList = [];\n      for(const key in attrs){\n        let value = attrs[key];\n        attrList.push(\n          <div className=\"form-group\" key={'attrs-' + key}>\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{key}</label>\n                <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={value} type=\"text\" id={key} name={key}  \n                  onChange={(e)=>{handleAttrsChange(key,e.target.value)}}/>\n                </div>\n            </div>\n          </div>\n        )\n      }\n    return (\n      <div>\n      <div className=\"form-group\">\n        <div className=\"row\">\n            <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n            <div className=\" col-sm-10\">\n                <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                 onChange={(e)=>handleTagChange(e.target.value)}>\n                  {tags.map((tag)=>{\n                    return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                  })}\n                </select>\n            </div>\n        </div>\n      </div>\n        {attrList}          \n       \n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Image </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Image;\n","import React , {useEffect} from 'react';\n\nfunction A(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <a ref={props.tagRef} className={props.attrs.class} \n    href={props.attrs.href} target={props.attrs.target||'_slef'}>\n      {props.content}\n    </a>\n  );\n}\n\n\nexport default A;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport A from './tags/A';\n\nfunction Link() {\n  const [tag, setTag] = useState('a'); \n  const [content, setContnet] = useState('Link'); \n  const [attrs, setAttrs] = useState({\n    href:\"#\",\n    target:'_self',\n    class : \"\"\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleContentChange(value) {\n    setContnet(value);\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  const tags =[\n    'a'\n  ];\n  const tagsComponent = {\n    a : A,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs} content={content}/>;\n    \n  }\n  \n  function getDetail(){\n\n    return (\n      <div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Content</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={content} onChange={(e)=>handleContentChange(e.target.value)}/>\n              </div>\n          </div>\n        </div>\n      \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">href</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.href} onChange={(e)=>handleAttrsChange('href',e.target.value)}/>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.className} onChange={(e)=>handleAttrsChange('className',e.target.value)}/>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Target</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"target\" id=\"target\" value={attrs.target}\n                  onChange={(e)=>handleAttrsChange('target',e.target.value)}>\n                    {['_self','_blank'].map((value)=>{\n                      return (<option key={\"option-\" + value} value={value} >{value}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n       \n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Link </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Link;\n","import React , {useEffect} from 'react';\n\nfunction UL(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <ul ref={props.tagRef} className={props.attrs.class} >\n      {\n        props.contentList.map((item,index)=>{\n          return (\n          <li className={props.attrs.childClass} key={\"listItem-\" + index}>{item}</li>\n          )\n        })\n      }\n    </ul>\n  );\n}\n\n\nexport default UL;\n","import React , {useEffect} from 'react';\n\nfunction OL(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <ol ref={props.tagRef} className={props.attrs.class} >\n      {\n        props.contentList.map((item,index)=>{\n          return (\n          <li className={props.attrs.childClass} key={\"listItem-\" + index}>{item}</li>\n          )\n        })\n      }\n    </ol>\n  );\n}\n\n\nexport default OL;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport UL from './tags/UL';\nimport OL from './tags/OL';\n\nfunction List() {\n  const [tag, setTag] = useState('ul'); \n  const [contentList, setContent] = useState(['item 1']); \n  const [attrs, setAttrs] = useState({\n    class : \"\",\n    childClass : \"\"\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleContentChange(index,value) {\n    let newContentList = JSON.parse(JSON.stringify(contentList));\n    newContentList[index] = value;\n    setContent(newContentList);\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n\n  function onItemChange(index,method){\n    let newContentList = JSON.parse(JSON.stringify(contentList));\n\n    if(method == 'ADD'){\n      newContentList.splice(index + 1,0,[]);\n    }\n    if(method == 'REMOVE'){\n      newContentList.splice(index,1);\n    }\n    setContent(newContentList);\n\n  }\n  const tags =[\n    'ul','ol'\n  ];\n  const tagsComponent = {\n    ul : UL,\n    ol : OL,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs} contentList={contentList}/>;\n    \n  }\n  \n  function getDetail(){\n\n    return (\n      <div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">ItemList</label>\n              <div className=\"col-sm-10\" >\n              {\n                contentList.map((item,index)=>{\n                  return (\n                    <div className=\"row mb-2 pl-3\" key={\"item-\" + index} >\n                      {/* { index >= 1 ? \n                      <span className=\"col-sm-2\"></span>\n                      :null\n                      } */}\n                      <input className=\"form-control col-sm-10\" value={item} onChange={(e)=>handleContentChange(index,e.target.value)}/>\n                      <div className=\"btn-group col-sm-2\" >\n                        <button className=\"btn btn-success\" onClick={()=>{onItemChange(index,'ADD')}}>+</button>\n                        {\n                          contentList.length > 1 ?\n                          <button className=\"btn btn-danger\" onClick={()=>{onItemChange(index,'REMOVE')}}>-</button>\n                          :null\n                        }\n                      </div>\n                    </div>\n                  )\n                })\n              }\n              </div>\n            \n              \n              \n          </div>\n        </div>\n      \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n       \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.className} onChange={(e)=>handleAttrsChange('class',e.target.value)}/>\n              </div>\n          </div>\n        </div>    \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Child Class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.className} onChange={(e)=>handleAttrsChange('childClass',e.target.value)}/>\n              </div>\n          </div>\n        </div>   \n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    console.log(tagRef);\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        var regexNewLine = /></gi;\n        var regexTab = /<li/gi;\n        var regexRemoveLine = />\\n<\\/li/gi;\n        return ((tagRef.current.outerHTML.replace(regexNewLine, '>\\n<')).replace(regexTab, '\\t<li')).replace(regexRemoveLine, '></li');\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> List </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default List;\n","import React , {useEffect} from 'react';\n\nfunction TABLE(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <table ref={props.tagRef} className={props.attrs.class}>\n      {\n        props.attrs.hasHead ? \n        \n          <thead>\n            <tr>\n                {\n                  props.tableList.head[0].map((title,index)=>{\n                    return <th key={'head-' + index}>{title}</th>\n                  })\n                }\n            </tr>\n          </thead>\n\n        :null\n      }\n     \n      <tbody>\n          {\n            props.tableList.body.map((row,rIndex)=>{\n              return (\n                <tr key={'body-row-'+rIndex}>\n                  {\n                    row.map((col,cIndex)=>{\n                      return <td key={'body-col-' + cIndex}>{col}</td>\n                    })\n                  }\n                </tr>\n             \n              )\n            })\n          }\n        \n      </tbody>\n      {\n        props.attrs.hasFoot ? \n          <tfoot>\n            <tr>\n                {\n                  props.tableList.footer[0].map((title,index)=>{\n                    return <th key={'footer-' + index}>{title}</th>\n                  })\n                }\n            </tr>\n          </tfoot>\n\n        :null\n      }\n    </table>\n\n  );\n}\n\n\nexport default TABLE;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport TABLE from './tags/TABLE';\n\nfunction Table() {\n  const [tag, setTag] = useState('table'); \n  const [tableList, setTable] = useState({\n    head:[['ID']],\n    body:[\n      ['1']\n    ],\n    footer:[['ID']]\n  }); \n  const [attrs, setAttrs] = useState({\n    class : \"table table-responsive-sm\",\n    hasHead : true,\n    hasFoot: false,\n    useTh : false,\n    rowCount : 1,\n    columnCount : 1,\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleTableListChange(key,rIndex,cIndex,value) {\n    let newTableList = JSON.parse(JSON.stringify(tableList));\n    newTableList[key][rIndex][cIndex] = value;\n    setTable(newTableList);\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n\n  function onTrChange(method){\n    let newTableList = JSON.parse(JSON.stringify(tableList));\n\n    if(method == 'ADD'){\n      let newRow = [];\n      for(let i = 0 ; i < attrs.columnCount ; i++){\n        newRow.push(\"\");\n      }\n      newTableList.body.push(newRow);\n\n      handleAttrsChange('rowCount',attrs['rowCount'] + 1);\n\n    }\n    if(method == 'REMOVE'){\n      newTableList.body.pop();\n      handleAttrsChange('rowCount',attrs['rowCount'] - 1);\n    }\n    console.log(newTableList);\n    setTable(newTableList);\n\n  }\n  function onTdChange(method){\n    let newTableList = JSON.parse(JSON.stringify(tableList));\n\n    if(method == 'ADD'){\n      tableList.body.map((item,index)=>{\n        newTableList.body[index].push([\"\"]);\n      })\n      newTableList.head[0].push([\"\"]);\n      newTableList.footer[0].push([\"\"]);\n      handleAttrsChange('columnCount',attrs['columnCount'] + 1);\n\n    }\n    if(method == 'REMOVE'){\n      tableList.body.map((item,index)=>{\n        newTableList.body[index].pop([\"\"]);\n      })\n      newTableList.head[0].pop();\n      newTableList.footer[0].pop();\n      handleAttrsChange('columnCount',attrs['columnCount'] - 1);\n    }\n    console.log(newTableList);\n    setTable(newTableList);\n\n  }\n  const tags =[\n    'table'\n  ];\n  const tagsComponent = {\n    table : TABLE,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs} tableList={tableList}/>;\n    \n  }\n  \n  function getDetail(){\n\n    return (\n      <div>\n\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"hasHead\">Show Head</label>\n              <div className=\" col-sm-10\">\n                  <div className=\"form-check\">\n                      <input className=\"form-check-input\" type=\"checkbox\" \n                      id=\"hasHead\" name=\"hasHead\" checked={attrs.hasHead}\n                      onChange={(e)=>{handleAttrsChange('hasHead',!attrs.hasHead)}}/>\n                      <label className=\"form-check-label\" htmlFor=\"hasHead\">\n                          Yes\n                      </label>\n                  </div>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"hasFoot\">Show Footer</label>\n              <div className=\" col-sm-10\">\n                  <div className=\"form-check\">\n                      <input className=\"form-check-input\" type=\"checkbox\" \n                      id=\"hasFoot\" name=\"hasFoot\" checked={attrs.hasFoot}\n                      onChange={(e)=>{handleAttrsChange('hasFoot',!attrs.hasFoot)}}/>\n                      <label className=\"form-check-label\" htmlFor=\"hasFoot\">\n                        Yes\n                      </label>\n                  </div>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" >Row Count</label>\n              <div className=\"col-sm-1\">\n                  <label className=\"col-form-label\" >\n                  {attrs.rowCount}\n                  </label>\n\n              </div>\n              <div className=\"btn-group col-sm-2\" >\n                <button className=\"btn btn-success\" onClick={()=>{onTrChange('ADD')}}>+</button>\n                {\n                  attrs.rowCount > 1 ?\n                  <button className=\"btn btn-danger\" onClick={()=>{onTrChange('REMOVE')}}>-</button>\n                  :null\n                }\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" >Column Count</label>\n              <div className=\"col-sm-1\">\n                  <label className=\"col-form-label\" >\n                  {attrs.columnCount}\n                  </label>\n\n              </div>\n              <div className=\"btn-group col-sm-2\" >\n                <button className=\"btn btn-success\" onClick={()=>{onTdChange('ADD')}}>+</button>\n                {\n                  attrs.columnCount > 1 ?\n                  <button className=\"btn btn-danger\" onClick={()=>{onTdChange('REMOVE')}}>-</button>\n                  :null\n                }\n              </div>\n          </div>\n        </div>\n        { attrs.hasHead ?\n          <div className=\"form-group\">\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Head Title</label>\n                <div className=\"col-sm-10\" >\n                {\n                  tableList.head.map((row,rIndex)=>{\n\n                    return (\n                      <div className=\"row mb-2 px-3\" key={\"item-\" + rIndex} >\n                        {\n                          row.map((col,cIndex)=>{\n                            return  <input key={\"item-\" + rIndex + \"-\" + cIndex} className=\"form-control col\"  value={col} onChange={(e)=>handleTableListChange('head',rIndex,cIndex,e.target.value)}/> \n                            \n                          })\n                        }\n                      \n                      </div>\n                    )\n                  })\n                }\n                </div>\n            </div>\n          </div>\n          :null\n        }\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">TableList</label>\n              <div className=\"col-sm-10\" >\n              {\n                tableList.body.map((row,rIndex)=>{\n\n                  return (\n                    <div className=\"row mb-2 px-3\" key={\"item-\" + rIndex} >\n                      {\n                        row.map((col,cIndex)=>{\n                          return  <input key={\"item-\" + rIndex + \"-\" + cIndex} className=\"form-control col\"  value={col} onChange={(e)=>handleTableListChange('body',rIndex,cIndex,e.target.value)}/> \n                          \n                        })\n                      }\n                     \n                    </div>\n                  )\n                })\n              }\n              </div>\n          </div>\n        </div>\n        { attrs.hasFoot ?\n          <div className=\"form-group\">\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Footer Title</label>\n                <div className=\"col-sm-10\" >\n                {\n                  tableList.footer.map((row,rIndex)=>{\n\n                    return (\n                      <div className=\"row mb-2 px-3\" key={\"item-\" + rIndex} >\n                        {\n                          row.map((col,cIndex)=>{\n                            return  <input key={\"item-\" + rIndex + \"-\" + cIndex} className=\"form-control col\"  value={col} onChange={(e)=>handleTableListChange('footer',rIndex,cIndex,e.target.value)}/> \n                            \n                          })\n                        }\n                      \n                      </div>\n                    )\n                  })\n                }\n                </div>\n            </div>\n          </div>\n          :null\n        }\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n       \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.class} onChange={(e)=>handleAttrsChange('class',e.target.value)}/>\n              </div>\n          </div>\n        </div>    \n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    console.log(tagRef);\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        let codeString = tagRef.current.outerHTML;\n        let regexNewLine = /></gi;\n        codeString = codeString.replace(regexNewLine, '>\\n<');\n\n        let theadTab = /<thead>/gi;\n        codeString = codeString.replace(theadTab, '\\t<thead>');\n        theadTab = /<\\/thead>/gi;\n        codeString = codeString.replace(theadTab, '\\t</thead>');\n\n        let tbodyTab = /<tbody>/gi;\n        codeString = codeString.replace(tbodyTab, '\\t<tbody>');\n        tbodyTab = /<\\/tbody>/gi;\n        codeString = codeString.replace(tbodyTab, '\\t</tbody>');\n\n        let tfooterTab = /<tfoot>/gi;\n        codeString = codeString.replace(tfooterTab, '\\t<tfoot>');\n        tfooterTab = /<\\/tfoot>/gi;\n        codeString = codeString.replace(tfooterTab, '\\t</tfoot>');\n\n        let trTab = /<tr>/gi;\n        codeString = codeString.replace(trTab, '\\t\\t<tr>');\n        trTab = /<\\/tr>/gi;\n        codeString = codeString.replace(trTab, '\\t\\t</tr>');\n\n        let tdTab = /<td>/gi;\n        codeString = codeString.replace(tdTab, '\\t\\t\\t<td>');\n        // tdTab = /<\\/td>/gi;\n        // codeString = codeString.replace(tdTab, '\\t\\t\\t</td>');\n\n        let thTab = /<th>/gi;\n        codeString = codeString.replace(thTab, '\\t\\t\\t<th>');\n        // thTab = /<\\/th>/gi;\n        // codeString = codeString.replace(thTab, '\\t\\t\\t</th>');\n\n\n        let regexRemoveLine = />\\n<\\/td/gi;\n        codeString = codeString.replace(regexRemoveLine, '></td');\n        regexRemoveLine = />\\n<\\/th/gi;\n        codeString = codeString.replace(regexRemoveLine, '></th');\n\n        return codeString;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Table </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n  );\n}\n\n\nexport default Table;","import React from 'react';\nimport Heading from '../../components/heading/Heading';\nimport Paragraph from '../../components/paragraph/Paragraph';\nimport Image from '../../components/image/Image';\nimport Link from '../../components/link/Link';\nimport List from '../../components/list/List';\nimport Table from '../../components/table/Table';\n\nimport {\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\n\nfunction MainView() {\n  return (\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n      <div className=\"container\">\n        <div className=\"row\">\n            <Switch>\n                <Route path=\"/Heading\">\n                    <Heading/>\n                </Route>\n                <Route path=\"/Paragraphs\">\n                    <Paragraph/>\n                </Route>\n                <Route path=\"/Image\">\n                    <Image/>\n                </Route>\n                <Route path=\"/Link\">\n                    <Link/>\n                </Route>\n                <Route path=\"/List\">\n                    <List/>\n                </Route>\n                <Route path=\"/Table\">\n                    <Table/>\n                </Route>\n                \n            </Switch>\n            \n            {/* <div className=\"text-center cover-container w-100 p-3 mx-auto flex-column col-lg-12\">\n                <div className=\"inner cover\">\n                    <img className=\"rounded-circle\" width=\"140\" height=\"140\" src=\"https://img.bobowin.blog/uploads/20190320152911_6.jpg\" alt=\"myPhoto\"/>\n                    <h1 className=\"cover-heading\"> Charlie </h1>\n                    <h4> Infomation System </h4>\n                    <p className=\"lead\">Hello! My name is Charlie. <br/>I'm a <span>Full-stack</span> developer for Website and iOS Application. </p>\n                    <hr/>\n                    <a href=\"#\" target=\"_blank\" >Learn more</a>\n                </div>\n            </div>\n            {/* <!-- col-12 --> */}\n\n\n            {/* <div className=\"col-lg-6\">\n                <div className=\"card\" >\n                    <div className=\"card-header\">\n                        <h2 className=\"text-secondary\">Ability</h2>\n                    </div>\n                    <div className=\"card-body pl-4 py-2\">\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item text-secondary\">Front-end develop</li>\n                            <li className=\"list-group-item text-secondary\">Back-end develop</li>\n                            <li className=\"list-group-item text-secondary\">iOS app develop</li>\n                        </ul>\n                    </div>\n                </div>\n            </div> */}\n            {/* <!-- col-6 --> */}\n\n{/* \n            <div className=\"col-lg-6\">\n                <div className=\"card\" >\n                    <div className=\"card-header\">\n                        <h2 className=\"text-secondary\">Hobbies</h2>\n                    </div>\n                    <div className=\"card-body pl-4 py-2\">\n                        <ol className=\"list-group list-group-flush\" >\n                            <li className=\"list-group-item text-secondary\">Diving</li>\n                            <li className=\"list-group-item text-secondary\">Snow-boarding</li>\n                            <li className=\"list-group-item text-secondary\">Photography</li>\n                        </ol>\n                    </div>\n                </div>\n            </div> */}\n            {/* <!-- col-6 --> */}\n\n\n            {/* <div className=\"col-lg-12 mt-5 \">\n                <table className=\"table table-dark table-responsive-sm\">\n\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>No.</th>\n                            <th>DEPT</th>\n                            <th>Date</th>\n                            <th>Comment</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <th>1</th>\n                            <td>WZ</td>\n                            <td>12435</td>\n                            <td>BS DEPT</td>\n                            <td>2019-09-30</td>\n                            <td>Hello Charlie!</td>\n                        </tr>\n                        <tr>\n                            <th>2</th>\n                            <td>GG</td>\n                            <td>67890</td>\n                            <td>SALES DEPT</td>\n                            <td>2019-10-01</td>\n                            <td>Hey!Charlie~</td>\n                        </tr>\n                    </tbody>\n\n                </table>\n            </div> */}\n            {/* <!-- col-12 --> */}\n{/* \n            <div className=\"col-lg-12 mt-5\">\n                <form>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"commentName\" className=\"col-sm-2 col-form-label\">Name</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"text\" className=\"form-control\" name=\"name\" id=\"commentName\" placeholder=\"Name\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"id\" className=\"col-sm-2 col-form-label\">No.</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"number\" className=\"form-control\" name=\"no\" id=\"no\" placeholder=\"No.\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group \">\n                            <div className=\"row\">\n                                <label className=\"col-form-label col-sm-2\" htmlFor=\"dept \">Dept</label>\n                                <div className=\" col-sm-10\">\n                                    <select className=\"form-control\" name=\"dept\" id=\"dept\">\n                                        <option>BS DEPT</option>\n                                        <option>SALES DEPT</option>\n                                        <option>SALES OPERATION DEPT</option>\n                                        <option>TECH DEPT</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"commentDate\" className=\"col-sm-2 col-form-label\">Date</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"date\" className=\"form-control\" min=\"2019-09-01\" name=\"date\" id=\"commentDate\" placeholder=\"Date\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"row\">\n                            <legend className=\"col-form-label col-sm-2 pt-0\">Sax</legend>\n                            <div className=\"col-sm-10\">\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"sexRadios\" id=\"saxRadios1\" value=\"Male\" checked/>\n                                    <label className=\"form-check-label\" htmlFor=\"saxRadios1\">\n                                        Male\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"sexRadios\" id=\"saxRadios2\" value=\"Female\"/>\n                                    <label className=\"form-check-label\" htmlFor=\"saxRadios2\">\n                                        Female\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label className=\"col-form-label col-sm-2\" htmlFor=\"anonymous \">Anonymous</label>\n                        <div className=\"col-sm-10\">\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"anonymous\" name=\"anonymous\"/>\n                                <label className=\"form-check-label\" htmlFor=\"Anonymous\">\n                                    Yes\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"comment\" className=\"col-sm-2 col-form-label\">Comment</label>\n                        <div className=\"col-sm-10\">\n                            <textarea className=\"form-control\" id=\"comment\" name=\"comment\" rows=\"10\" placeholder=\"comment\"></textarea>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <div className=\"col-12\">\n                        <button type=\"submit\" className=\"btn btn-info btn-block\">Comment</button>\n                        </div>\n                    </div>\n                </form>\n            </div> */}\n            {/* <!-- col-12 -->  */}\n\n\n        </div>\n        {/* <!-- row --> */}\n    </div>\n    {/* <!-- container --> */}\n    </main>\n\n  );\n}\n\nexport default MainView;\n","import React from 'react';\nimport Navbar from '../layout/navBar/Navbar';\nimport SideMenu from '../layout/sideMenu/SideMenu';\nimport MainView from '../layout/mainView/MainView';\nimport {\n  HashRouter as Router,\n} from \"react-router-dom\";\n\nfunction Home() {\n  return (\n\n  <div>\n    <Router>\n\n    <Navbar/>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <SideMenu componentList={componentList}/>\n          <MainView/>\n        </div>\n      </div>\n    </Router>\n  </div>\n\n  );\n}\nconst componentList = {\n  html : [\n    {\n      type : 'Heading',\n      tagList : [\n        'h1','h2','h3','h4','h5','h6'\n      ],\n      abbrList : []\n    },\n    {\n      type : 'Paragraphs',\n      tagList : ['p'],\n      abbrList : []\n    }, \n    {\n      type : 'Image',\n      tagList : ['img'],\n      abbrList : []\n    },\n    {\n      type : 'Link',\n      tagList : ['a'],\n      abbrList : []\n    },  \n    {\n\n      type : 'List',\n      tagList : ['ul','ol','li'],\n      abbrList : []\n    }, \n    {\n      type : 'Table',\n      tagList : ['table','thead','tbody','tfoot','tr','th','td'],\n      abbrList : []\n    }, \n    {\n      type : 'Form',\n      tagList : ['form','label','input','select','textarea','button'],\n      abbrList : []\n    }, \n    {\n      type : 'Other',\n      tagList : ['br','hr','div','span'],\n      abbrList : []\n    }\n  ],\n  css :[\n\n  ]\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from './home/Home'\nfunction App() {\n  return (\n    <div>\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './dashboard.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}