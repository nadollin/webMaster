{"version":3,"sources":["layout/navBar/Navbar.js","layout/sideMenu/SideMenu.js","components/codeView/CodeView.js","components/detailView/DetailView.js","components/preview/Preview.js","components/heading/tags/H1.js","components/heading/tags/H2.js","components/heading/tags/H3.js","components/heading/tags/H4.js","components/heading/tags/H5.js","components/heading/tags/H6.js","components/heading/Heading.js","components/paragraph/tags/P.js","components/paragraph/Paragraph.js","components/image/tags/Image.js","components/image/Image.js","components/link/tags/A.js","components/link/Link.js","components/list/tags/UL.js","components/list/tags/OL.js","components/list/List.js","components/table/tags/TABLE.js","components/table/Table.js","components/form/tags/INPUT.js","components/form/tags/BUTTON.js","components/form/tags/TEXTAREA.js","components/form/tags/SELECT.js","components/form/tags/FORM.js","components/form/tagDetail/InputTypeSelect.js","components/form/tagDetail/TagSelect.js","components/form/tagDetail/Input.js","components/form/tagDetail/Select.js","components/form/tagDetail/Button.js","components/form/tagDetail/Textarea.js","components/form/Form.js","cssComponents/codeView/CodeView.js","cssComponents/detailView/DetailView.js","cssComponents/preview/Preview.js","cssComponents/color/tags/COLOR.js","cssComponents/color/Color.js","cssComponents/text/tags/TEXT.js","cssComponents/text/Text.js","cssComponents/border/tags/BORDER.js","cssComponents/border/Border.js","cssComponents/margin/tags/MARGIN.js","cssComponents/margin/Margin.js","cssComponents/padding/tags/PADDING.js","cssComponents/padding/Padding.js","cssComponents/wightHeight/tags/WH.js","cssComponents/wightHeight/WightHeight.js","layout/mainView/ProjectView.js","layout/mainView/MainView.js","home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","placeholder","aria-label","getList","list","name","viewList","map","item","index","push","key","to","SideMenu","props","htmlList","componentList","html","cssList","css","data-feather","title","target","CodeView","wrapLines","language","style","tomorrowNight","customStyle","whiteSpace","codeString","DetailView","detail","Preview","preview","H1","useEffect","tagDidMount","ref","tagRef","attrs","class","content","H2","H3","H4","H5","H6","Heading","useState","tag","setTag","setContent","setCodeString","React","createRef","setAttrs","current","outerHTML","getCodeString","tags","tagsComponent","h1","h2","h3","h4","h5","h6","attrList","value","htmlFor","id","onChange","e","newAttrs","JSON","parse","stringify","handleAttrsChange","handleTagChange","getDetail","TagComponent","getPreview","P","console","log","indexOf","dangerouslySetInnerHTML","__html","replace","Paragraph","setContnet","p","Image","src","width","height","alt","img","Img","A","Link","a","UL","contentList","childClass","OL","List","onItemChange","method","newContentList","splice","ul","ol","handleContentChange","onClick","length","TABLE","hasHead","tableList","head","body","row","rIndex","col","cIndex","hasFoot","footer","Table","setTable","useTh","rowCount","columnCount","handleTableListChange","newTableList","theadTab","tbodyTab","tfooterTab","trTab","regexRemoveLine","onTrChange","newRow","i","pop","onTdChange","table","checked","INPUT","divClass","labelClass","label","placeHolder","handleListChange","BUTTON","TEXTAREA","rows","SELECT","options","option","FORM","ItemsComponent","Input","Select","Textarea","Button","formList","ItemComponent","InputTypeSelect","handleTypeChange","TagSelect","handleOptionChange","onOptionChange","Form","setForm","newFormList","newInput","initItem","childIndex","divTab","labelTab","selectTab","optionTab","onListChange","form","detailComponent","InputDetail","SelectDetail","TextareaDetail","ButtonDetail","detailList","DetailComponent","getItemDetail","COLOR","styleObj","Color","color","backgroundColor","borderColor","borderStyle","borderWidth","setStyle","newStyle","handleStyleChange","TEXT","Text","textAlign","textDecoration","textTransform","fontSize","fontFamily","fontStyle","fontWeight","setValue","BORDER","tagRef1","btn1","tagRef2","btn2","tagRef3","btn3","Border","codeString1","setCodeString1","codeString2","setCodeString2","codeString3","setCodeString3","borderTopStyle","borderTopColor","borderTopWidth","border","borderRadius","btn","MARGIN","Margin","marginTop","marginRight","marginBottom","marginLeft","margin","PADDING","Padding","paddingTop","paddingRight","paddingBottom","paddingLeft","padding","WH","WightHeight","ProjectView","role","min","MainView","exact","path","tagList","abbrList","Home","process","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eabeca29.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Navbar() {\n  return (\n    \n    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <a className=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#\">Web Master</a>\n      <input className=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"/>\n      <ul className=\"navbar-nav px-3\">\n        {/* <li className=\"nav-item text-nowrap\">\n          <a className=\"nav-link\" href=\"#\">Sign out</a>\n        </li> */}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\nfunction SideMenu(props) {\n  let htmlList = getList(props.componentList.html,'html');\n  let cssList = getList(props.componentList.css,'css');\n\n  return (\n    <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      <div className=\"sidebar-sticky\">\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>HTML</span>\n          <a className=\"d-flex align-items-center text-muted\" href=\"#\">\n            <span data-feather=\"plus-circle\"></span>\n          </a>\n        </h6>\n        {htmlList}\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>CSS</span>\n          <a className=\"d-flex align-items-center text-muted\" href=\"#\">\n            <span data-feather=\"plus-circle\"></span>\n          </a>\n        </h6>\n        {cssList}\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <a href=\"https://www.flaticon.com/authors/mynamepong\" title=\"mynamepong\" target=\"_blank\"><span>Icon made by mynamepong</span></a>\n        </h6>\n      </div>\n    </nav>\n\n  );\n}\n\nfunction getList(list,name){\n    let viewList = [];\n    list.map((item,index)=>{\n      viewList.push(\n        <li className=\"nav-item\" key={name + \"-\" + index}>\n          <Link className=\"nav-link \" to={\"/\" + name +  \"/\" + item.type}>\n            <span></span>\n            {item.type}\n            {/* <span className=\"sr-only\">(current)</span> */}\n          </Link>\n        </li>\n      )\n    })\n    return (\n      <ul className=\"nav flex-column\">\n        {viewList}\n      </ul>\n    );\n}\n\nexport default SideMenu;\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nfunction CodeView(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          CodeView\n        </div>\n        <div className=\"card-body\">\n          <SyntaxHighlighter wrapLines={true} language=\"html\"\n           style={tomorrowNight} customStyle={{whiteSpace: 'pre-wrap'}}>\n            {props.codeString}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CodeView;\n","import React from 'react';\n\nfunction DetailView(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Detail\n        </div>\n        <div className=\"card-body\">\n            {props.detail}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DetailView;","import React from 'react';\n\nfunction Preview(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Preview\n        </div>\n        <div className=\"card-body\">\n          {props.preview}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Preview;","import React , {useEffect} from 'react';\n\nfunction H1(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <h1 ref={props.tagRef} className={props.attrs.class}>{props.content}</h1>\n  );\n}\n\n\nexport default H1;\n","import React , {useEffect}from 'react';\n\nfunction H2(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h2 ref={props.tagRef} className={props.attrs.class}>{props.content}</h2>\n  );\n}\n\n\nexport default H2;\n","import React , {useEffect}from 'react';\n\nfunction H3(props) {\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h3 ref={props.tagRef} className={props.attrs.class}>{props.content}</h3>\n  );\n}\n\n\nexport default H3;\n","import React , {useEffect} from 'react';\n\nfunction H4(props) {\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h4 ref={props.tagRef} className={props.attrs.class}>{props.content}</h4>\n  );\n}\n\n\nexport default H4;\n","import React, {useEffect}  from 'react';\n\nfunction H5(props) {\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h5 ref={props.tagRef} className={props.attrs.class}>{props.content}</h5>\n  );\n}\n\n\nexport default H5;\n","import React, {useEffect} from 'react';\n\nfunction H6(props) {\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  return (\n    <h6 ref={props.tagRef} className={props.attrs.class}>{props.content}</h6>\n  );\n}\n\n\nexport default H6;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport H1 from './tags/H1';\nimport H2 from './tags/H2';\nimport H3 from './tags/H3';\nimport H4 from './tags/H4';\nimport H5 from './tags/H5';\nimport H6 from './tags/H6';\n\nfunction Heading() {\n  const [tag, setTag] = useState('h1'); \n  const [content, setContent] = useState('Heading'); \n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n  const [attrs, setAttrs] = useState({\n    class : \"\"\n  }); \n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleContentChange(value) {\n    setContent(value);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n\n  const tags =[\n    'h1','h2','h3','h4','h5','h6'\n  ];\n  const tagsComponent = {\n    h1 : H1,\n    h2 : H2,\n    h3 : H3,\n    h4 : H4,\n    h5 : H5,\n    h6 : H6,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} content={content} attrs={attrs}/>;\n    \n  }\n  \n  function getDetail(){\n    let attrList = [];\n    for(const key in attrs){\n      let value = attrs[key];\n      attrList.push(\n        <div className=\"form-group\" key={'attrs-' + key}>\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{key}</label>\n              <div className=\" col-sm-10\">\n                <input className=\"form-control\" value={value} type=\"text\" id={key} name={key} \n                onChange={(e)=>{handleAttrsChange(key,e.target.value)}}/>\n              </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Content</label>\n              <div className=\" col-sm-10\">\n                 <input type=\"text\" className=\"form-control\" value={content} onChange={(e)=>handleContentChange(e.target.value)}/>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                     \n                  </select>\n              </div>\n          </div>\n        </div>\n        {attrList}\n\n      </div>\n    \n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Heading </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Heading;\n","import React , {useEffect} from 'react';\n\nfunction P(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n    console.log(props.content.indexOf('\\n'));\n  });\n  function getContent(){\n    var regex = /\\n/gi;\n    return {__html: props.content.replace(regex, '</br>')};\n  }\n  return (\n    <p ref={props.tagRef} className={props.attrs.class} dangerouslySetInnerHTML={getContent()} />\n  );\n}\n\n\nexport default P;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport P from './tags/P';\n\nfunction Paragraph() {\n  const [tag, setTag] = useState('p'); \n  const [content, setContnet] = useState('Paragraphs'); \n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n  const [attrs, setAttrs] = useState({\n    class : \"\"\n  }); \n\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleContentChange(value) {\n    setContnet(value);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n\n  const tags =[\n    'p'\n  ];\n  const tagsComponent = {\n    p : P,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} content={content} attrs={attrs}/>;\n    \n  }\n  \n  function getDetail(){\n    let attrList = [];\n    for(const key in attrs){\n      let value = attrs[key];\n      attrList.push(\n        <div className=\"form-group\" key={'attrs-' + key}>\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{key}</label>\n              <div className=\" col-sm-10\">\n                <input className=\"form-control\" value={value} type=\"text\" id={key} name={key} \n                onChange={(e)=>{handleAttrsChange(key,e.target.value)}}/>\n              </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <div className=\"form-group\">\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Content</label>\n                <div className=\" col-sm-10\">\n                   <textarea className=\"form-control\" value={content} onChange={(e)=>handleContentChange(e.target.value)}></textarea>\n                </div>\n            </div>\n          </div>\n      \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n        {attrList}\n      </div>\n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Paragraphs </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Paragraph;\n","import React , {useEffect} from 'react';\n\nfunction Image(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <img ref={props.tagRef} className={props.attrs.class}\n    src={props.attrs.src} \n    width={props.attrs.width} height={props.attrs.height} \n    alt={props.attrs.alt}/>\n  );\n}\n\n\nexport default Image;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport Img from './tags/Image';\n\nfunction Image() {\n  const [tag, setTag] = useState('img'); \n  const [attrs, setAttrs] = useState({\n    width:140,\n    height:140,\n    src: \"https://img.bobowin.blog/uploads/20190320152911_6.jpg\",\n    alt : \"myPhoto\",\n    class : \"rounded-circle\"\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  const tags =[\n    'img'\n  ];\n  const tagsComponent = {\n    img : Img,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs}/>;\n    \n  }\n  \n  function getDetail(){\n    let attrList = [];\n      for(const key in attrs){\n        let value = attrs[key];\n        attrList.push(\n          <div className=\"form-group\" key={'attrs-' + key}>\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{key}</label>\n                <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={value} type=\"text\" id={key} name={key}  \n                  onChange={(e)=>{handleAttrsChange(key,e.target.value)}}/>\n                </div>\n            </div>\n          </div>\n        )\n      }\n    return (\n      <div>\n      <div className=\"form-group\">\n        <div className=\"row\">\n            <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n            <div className=\" col-sm-10\">\n                <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                 onChange={(e)=>handleTagChange(e.target.value)}>\n                  {tags.map((tag)=>{\n                    return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                  })}\n                </select>\n            </div>\n        </div>\n      </div>\n        {attrList}          \n       \n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Image </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Image;\n","import React , {useEffect} from 'react';\n\nfunction A(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <a ref={props.tagRef} className={props.attrs.class} \n    href={props.attrs.href} target={props.attrs.target||'_slef'}>\n      {props.content}\n    </a>\n  );\n}\n\n\nexport default A;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport A from './tags/A';\n\nfunction Link() {\n  const [tag, setTag] = useState('a'); \n  const [content, setContnet] = useState('Link'); \n  const [attrs, setAttrs] = useState({\n    href:\"#\",\n    target:'_self',\n    class : \"\"\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleContentChange(value) {\n    setContnet(value);\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  const tags =[\n    'a'\n  ];\n  const tagsComponent = {\n    a : A,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs} content={content}/>;\n    \n  }\n  \n  function getDetail(){\n\n    return (\n      <div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Content</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={content} onChange={(e)=>handleContentChange(e.target.value)}/>\n              </div>\n          </div>\n        </div>\n      \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">href</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.href} onChange={(e)=>handleAttrsChange('href',e.target.value)}/>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.className} onChange={(e)=>handleAttrsChange('className',e.target.value)}/>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Target</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"target\" id=\"target\" value={attrs.target}\n                  onChange={(e)=>handleAttrsChange('target',e.target.value)}>\n                    {['_self','_blank'].map((value)=>{\n                      return (<option key={\"option-\" + value} value={value} >{value}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n       \n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Link </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Link;\n","import React , {useEffect} from 'react';\n\nfunction UL(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <ul ref={props.tagRef} className={props.attrs.class} >\n      {\n        props.contentList.map((item,index)=>{\n          return (\n          <li className={props.attrs.childClass} key={\"listItem-\" + index}>{item}</li>\n          )\n        })\n      }\n    </ul>\n  );\n}\n\n\nexport default UL;\n","import React , {useEffect} from 'react';\n\nfunction OL(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <ol ref={props.tagRef} className={props.attrs.class} >\n      {\n        props.contentList.map((item,index)=>{\n          return (\n          <li className={props.attrs.childClass} key={\"listItem-\" + index}>{item}</li>\n          )\n        })\n      }\n    </ol>\n  );\n}\n\n\nexport default OL;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport UL from './tags/UL';\nimport OL from './tags/OL';\n\nfunction List() {\n  const [tag, setTag] = useState('ul'); \n  const [contentList, setContent] = useState(['item 1']); \n  const [attrs, setAttrs] = useState({\n    class : \"\",\n    childClass : \"\"\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleContentChange(index,value) {\n    let newContentList = JSON.parse(JSON.stringify(contentList));\n    newContentList[index] = value;\n    setContent(newContentList);\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n\n  function onItemChange(index,method){\n    let newContentList = JSON.parse(JSON.stringify(contentList));\n\n    if(method == 'ADD'){\n      newContentList.splice(index + 1,0,[]);\n    }\n    if(method == 'REMOVE'){\n      newContentList.splice(index,1);\n    }\n    setContent(newContentList);\n\n  }\n  const tags =[\n    'ul','ol'\n  ];\n  const tagsComponent = {\n    ul : UL,\n    ol : OL,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs} contentList={contentList}/>;\n    \n  }\n  \n  function getDetail(){\n\n    return (\n      <div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">ItemList</label>\n              <div className=\"col-sm-10\" >\n              {\n                contentList.map((item,index)=>{\n                  return (\n                    <div className=\"row mb-2 pl-3\" key={\"item-\" + index} >\n                      {/* { index >= 1 ? \n                      <span className=\"col-sm-2\"></span>\n                      :null\n                      } */}\n                      <input className=\"form-control col-sm-10\" value={item} onChange={(e)=>handleContentChange(index,e.target.value)}/>\n                      <div className=\"btn-group col-sm-2\" >\n                        <button className=\"btn btn-success\" onClick={()=>{onItemChange(index,'ADD')}}>+</button>\n                        {\n                          contentList.length > 1 ?\n                          <button className=\"btn btn-danger\" onClick={()=>{onItemChange(index,'REMOVE')}}>-</button>\n                          :null\n                        }\n                      </div>\n                    </div>\n                  )\n                })\n              }\n              </div>\n            \n              \n              \n          </div>\n        </div>\n      \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n       \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.className} onChange={(e)=>handleAttrsChange('class',e.target.value)}/>\n              </div>\n          </div>\n        </div>    \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Child Class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.className} onChange={(e)=>handleAttrsChange('childClass',e.target.value)}/>\n              </div>\n          </div>\n        </div>   \n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    console.log(tagRef);\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        var regexNewLine = /></gi;\n        var regexTab = /<li/gi;\n        var regexRemoveLine = />\\n<\\/li/gi;\n        return ((tagRef.current.outerHTML.replace(regexNewLine, '>\\n<')).replace(regexTab, '\\t<li')).replace(regexRemoveLine, '></li');\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> List </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default List;\n","import React , {useEffect} from 'react';\n\nfunction TABLE(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <table ref={props.tagRef} className={props.attrs.class}>\n      {\n        props.attrs.hasHead ? \n        \n          <thead>\n            <tr>\n                {\n                  props.tableList.head[0].map((title,index)=>{\n                    return <th key={'head-' + index}>{title}</th>\n                  })\n                }\n            </tr>\n          </thead>\n\n        :null\n      }\n     \n      <tbody>\n          {\n            props.tableList.body.map((row,rIndex)=>{\n              return (\n                <tr key={'body-row-'+rIndex}>\n                  {\n                    row.map((col,cIndex)=>{\n                      return <td key={'body-col-' + cIndex}>{col}</td>\n                    })\n                  }\n                </tr>\n             \n              )\n            })\n          }\n        \n      </tbody>\n      {\n        props.attrs.hasFoot ? \n          <tfoot>\n            <tr>\n                {\n                  props.tableList.footer[0].map((title,index)=>{\n                    return <th key={'footer-' + index}>{title}</th>\n                  })\n                }\n            </tr>\n          </tfoot>\n\n        :null\n      }\n    </table>\n\n  );\n}\n\n\nexport default TABLE;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport TABLE from './tags/TABLE';\n\nfunction Table() {\n  const [tag, setTag] = useState('table'); \n  const [tableList, setTable] = useState({\n    head:[['ID']],\n    body:[\n      ['1']\n    ],\n    footer:[['ID']]\n  }); \n  const [attrs, setAttrs] = useState({\n    class : \"table table-responsive-sm\",\n    hasHead : true,\n    hasFoot: false,\n    useTh : false,\n    rowCount : 1,\n    columnCount : 1,\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleTableListChange(key,rIndex,cIndex,value) {\n    let newTableList = JSON.parse(JSON.stringify(tableList));\n    newTableList[key][rIndex][cIndex] = value;\n    setTable(newTableList);\n  }\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n\n  function onTrChange(method){\n    let newTableList = JSON.parse(JSON.stringify(tableList));\n\n    if(method == 'ADD'){\n      let newRow = [];\n      for(let i = 0 ; i < attrs.columnCount ; i++){\n        newRow.push(\"\");\n      }\n      newTableList.body.push(newRow);\n\n      handleAttrsChange('rowCount',attrs['rowCount'] + 1);\n\n    }\n    if(method == 'REMOVE'){\n      newTableList.body.pop();\n      handleAttrsChange('rowCount',attrs['rowCount'] - 1);\n    }\n    console.log(newTableList);\n    setTable(newTableList);\n\n  }\n  function onTdChange(method){\n    let newTableList = JSON.parse(JSON.stringify(tableList));\n\n    if(method == 'ADD'){\n      tableList.body.map((item,index)=>{\n        newTableList.body[index].push([\"\"]);\n      })\n      newTableList.head[0].push([\"\"]);\n      newTableList.footer[0].push([\"\"]);\n      handleAttrsChange('columnCount',attrs['columnCount'] + 1);\n\n    }\n    if(method == 'REMOVE'){\n      tableList.body.map((item,index)=>{\n        newTableList.body[index].pop([\"\"]);\n      })\n      newTableList.head[0].pop();\n      newTableList.footer[0].pop();\n      handleAttrsChange('columnCount',attrs['columnCount'] - 1);\n    }\n    console.log(newTableList);\n    setTable(newTableList);\n\n  }\n  const tags =[\n    'table'\n  ];\n  const tagsComponent = {\n    table : TABLE,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs} tableList={tableList}/>;\n    \n  }\n  \n  function getDetail(){\n\n    return (\n      <div>\n\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"hasHead\">Show Head</label>\n              <div className=\" col-sm-10\">\n                  <div className=\"form-check\">\n                      <input className=\"form-check-input\" type=\"checkbox\" \n                      id=\"hasHead\" name=\"hasHead\" checked={attrs.hasHead}\n                      onChange={(e)=>{handleAttrsChange('hasHead',!attrs.hasHead)}}/>\n                      <label className=\"form-check-label\" htmlFor=\"hasHead\">\n                          Yes\n                      </label>\n                  </div>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"hasFoot\">Show Footer</label>\n              <div className=\" col-sm-10\">\n                  <div className=\"form-check\">\n                      <input className=\"form-check-input\" type=\"checkbox\" \n                      id=\"hasFoot\" name=\"hasFoot\" checked={attrs.hasFoot}\n                      onChange={(e)=>{handleAttrsChange('hasFoot',!attrs.hasFoot)}}/>\n                      <label className=\"form-check-label\" htmlFor=\"hasFoot\">\n                        Yes\n                      </label>\n                  </div>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" >Row Count</label>\n              <div className=\"col-sm-1\">\n                  <label className=\"col-form-label\" >\n                  {attrs.rowCount}\n                  </label>\n\n              </div>\n              <div className=\"btn-group col-sm-2\" >\n                <button className=\"btn btn-success\" onClick={()=>{onTrChange('ADD')}}>+</button>\n                {\n                  attrs.rowCount > 1 ?\n                  <button className=\"btn btn-danger\" onClick={()=>{onTrChange('REMOVE')}}>-</button>\n                  :null\n                }\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" >Column Count</label>\n              <div className=\"col-sm-1\">\n                  <label className=\"col-form-label\" >\n                  {attrs.columnCount}\n                  </label>\n\n              </div>\n              <div className=\"btn-group col-sm-2\" >\n                <button className=\"btn btn-success\" onClick={()=>{onTdChange('ADD')}}>+</button>\n                {\n                  attrs.columnCount > 1 ?\n                  <button className=\"btn btn-danger\" onClick={()=>{onTdChange('REMOVE')}}>-</button>\n                  :null\n                }\n              </div>\n          </div>\n        </div>\n        { attrs.hasHead ?\n          <div className=\"form-group\">\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Head Title</label>\n                <div className=\"col-sm-10\" >\n                {\n                  tableList.head.map((row,rIndex)=>{\n\n                    return (\n                      <div className=\"row mb-2 px-3\" key={\"item-\" + rIndex} >\n                        {\n                          row.map((col,cIndex)=>{\n                            return  <input key={\"item-\" + rIndex + \"-\" + cIndex} className=\"form-control col\"  value={col} onChange={(e)=>handleTableListChange('head',rIndex,cIndex,e.target.value)}/> \n                            \n                          })\n                        }\n                      \n                      </div>\n                    )\n                  })\n                }\n                </div>\n            </div>\n          </div>\n          :null\n        }\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">TableList</label>\n              <div className=\"col-sm-10\" >\n              {\n                tableList.body.map((row,rIndex)=>{\n\n                  return (\n                    <div className=\"row mb-2 px-3\" key={\"item-\" + rIndex} >\n                      {\n                        row.map((col,cIndex)=>{\n                          return  <input key={\"item-\" + rIndex + \"-\" + cIndex} className=\"form-control col\"  value={col} onChange={(e)=>handleTableListChange('body',rIndex,cIndex,e.target.value)}/> \n                          \n                        })\n                      }\n                     \n                    </div>\n                  )\n                })\n              }\n              </div>\n          </div>\n        </div>\n        { attrs.hasFoot ?\n          <div className=\"form-group\">\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Footer Title</label>\n                <div className=\"col-sm-10\" >\n                {\n                  tableList.footer.map((row,rIndex)=>{\n\n                    return (\n                      <div className=\"row mb-2 px-3\" key={\"item-\" + rIndex} >\n                        {\n                          row.map((col,cIndex)=>{\n                            return  <input key={\"item-\" + rIndex + \"-\" + cIndex} className=\"form-control col\"  value={col} onChange={(e)=>handleTableListChange('footer',rIndex,cIndex,e.target.value)}/> \n                            \n                          })\n                        }\n                      \n                      </div>\n                    )\n                  })\n                }\n                </div>\n            </div>\n          </div>\n          :null\n        }\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n       \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.class} onChange={(e)=>handleAttrsChange('class',e.target.value)}/>\n              </div>\n          </div>\n        </div>    \n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    console.log(tagRef);\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        let codeString = tagRef.current.outerHTML;\n        let regexNewLine = /></gi;\n        codeString = codeString.replace(regexNewLine, '>\\n<');\n\n        let theadTab = /<thead>/gi;\n        codeString = codeString.replace(theadTab, '\\t<thead>');\n        theadTab = /<\\/thead>/gi;\n        codeString = codeString.replace(theadTab, '\\t</thead>');\n\n        let tbodyTab = /<tbody>/gi;\n        codeString = codeString.replace(tbodyTab, '\\t<tbody>');\n        tbodyTab = /<\\/tbody>/gi;\n        codeString = codeString.replace(tbodyTab, '\\t</tbody>');\n\n        let tfooterTab = /<tfoot>/gi;\n        codeString = codeString.replace(tfooterTab, '\\t<tfoot>');\n        tfooterTab = /<\\/tfoot>/gi;\n        codeString = codeString.replace(tfooterTab, '\\t</tfoot>');\n\n        let trTab = /<tr>/gi;\n        codeString = codeString.replace(trTab, '\\t\\t<tr>');\n        trTab = /<\\/tr>/gi;\n        codeString = codeString.replace(trTab, '\\t\\t</tr>');\n\n        let tdTab = /<td>/gi;\n        codeString = codeString.replace(tdTab, '\\t\\t\\t<td>');\n        // tdTab = /<\\/td>/gi;\n        // codeString = codeString.replace(tdTab, '\\t\\t\\t</td>');\n\n        let thTab = /<th>/gi;\n        codeString = codeString.replace(thTab, '\\t\\t\\t<th>');\n        // thTab = /<\\/th>/gi;\n        // codeString = codeString.replace(thTab, '\\t\\t\\t</th>');\n\n\n        let regexRemoveLine = />\\n<\\/td/gi;\n        codeString = codeString.replace(regexRemoveLine, '></td');\n        regexRemoveLine = />\\n<\\/th/gi;\n        codeString = codeString.replace(regexRemoveLine, '></th');\n\n        return codeString;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Table </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n  );\n}\n\n\nexport default Table;","\nimport React , {useState,useEffect} from 'react';\nfunction INPUT(props) {\n  // const [value,setValue] = useState('');\n  useEffect(() => {\n  });\n\n  return ( \n    <div  className={props.detail.divClass}>\n      <label htmlFor={props.detail.id} className={props.detail.labelClass}>{props.detail.label}</label>\n      <input className={props.detail.class} type={props.detail.type} id={props.detail.id} name={props.detail.name} placeholder={props.detail.placeHolder}\n       onChange={(e)=>{props.handleListChange('value',props.index,e.target.value)}} value={props.detail.value||''}/>\n    </div>\n  );\n}\n\n\nexport default INPUT;\n","\nimport React , {useState,useEffect} from 'react';\nfunction BUTTON(props) {\n  // const [value,setValue] = useState('Button');\n  useEffect(() => {\n  });\n\n  return ( \n    <div  className={props.detail.divClass}>\n      <button className={props.detail.class} type={props.detail.type}>{props.detail.value}</button>\n    </div>\n  );\n}\n\n\nexport default BUTTON;\n","\nimport React , {useState,useEffect} from 'react';\nfunction TEXTAREA(props) {\n  const [value,setValue] = useState('');\n  useEffect(() => {\n  });\n\n  return ( \n    <div  className={props.detail.divClass}>\n      <label htmlFor={props.detail.id}>{props.detail.label}</label>\n      <textarea className={props.detail.class} type={props.detail.type} id={props.detail.id} name={props.detail.name} \n        placeholder={props.detail.placeHolder}\n        rows={props.detail.props}\n        onChange={(e)=>{props.handleListChange('value',props.index,e.target.value)}} value={props.detail.value}></textarea>\n    </div>\n  );\n}\n\n\nexport default TEXTAREA;\n","\nimport React , {useState,useEffect} from 'react';\nfunction SELECT(props) {\n  const [value,setValue] = useState('');\n  useEffect(() => {\n  });\n\n  return ( \n    // \n    <div className={props.detail.divClass}>\n        <label htmlFor={props.detail.id} className={props.detail.labelClass}>{props.detail.label}</label>\n        <select  className={props.detail.class} type={props.detail.type} placeholder={props.detail.placeHolder}\n        value={props.detail.value}\n        onChange={(e)=>{props.handleListChange('value',props.index,e.target.value)}} >\n                {props.detail.options.map((option,index)=>{\n                  return (<option key={\"option-\" + props.index + \"-\" + index } value={option}>{option}</option>)\n                })}\n                \n        </select>\n    </div>\n  );\n}\n\n\nexport default SELECT;\n","import React , {useEffect} from 'react';\nimport INPUT from './INPUT';\nimport BUTTON from './BUTTON';\nimport TEXTAREA from './TEXTAREA';\nimport SELECT from './SELECT';\n\nfunction FORM(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n  const ItemsComponent = {\n    Input : INPUT,\n    Select : SELECT,\n    Textarea : TEXTAREA,\n    Button : BUTTON,\n  };\n  return (\n    <form ref={props.tagRef} className={props.attrs.class}>\n      {\n        props.formList.map((item,index)=>{\n          let ItemComponent = ItemsComponent[item.tag];\n          return <ItemComponent key={\"item-\" + index} detail={item} index={index} handleListChange={props.handleListChange}/>\n        })\n      }\n    </form>\n  );\n}\n\n\nexport default FORM;\n","import React , {useEffect} from 'react';\n\nfunction InputTypeSelect(props) {\n\n  useEffect(() => {\n  });\n  const types = ['text','number','date','password','checkbox','radio']\n  return (\n    <div className=\"form-group\">\n    <div className=\"row\">\n        <label className=\"col-form-label col-sm-2\" htmlFor=\"types\">Type</label>\n        <div className=\"col-sm-10\">\n            <select className=\"form-control\" name=\"types\" id=\"types\" value={props.type}\n            onChange={(e)=>props.handleTypeChange('type',props.index,e.target.value)}>\n              {types.map((type)=>{\n                return (<option key={\"option-\" + type} value={type} >{type}</option>)\n              })}\n               \n            </select>\n        </div>\n    </div>\n    </div>\n  );\n}\n\n\nexport default InputTypeSelect;\n","import React , {useEffect} from 'react';\n\nfunction TagSelect(props) {\n\n  useEffect(() => {\n  });\n  const tags = ['Input','Select','Textarea','Button']\n  return (\n    <div className=\"form-group\">\n      <div className=\"row\">\n          <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n          <div className=\"col-sm-10\">\n              <select className=\"form-control\" name=\"types\" id=\"types\" value={props.tag}\n              onChange={(e)=>props.handleTagChange('tag',props.index,e.target.value)}>\n                {tags.map((tag)=>{\n                  return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                })}\n                \n              </select>\n          </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default TagSelect;\n","\nimport React , {useEffect} from 'react';\nimport InputTypeSelect from './InputTypeSelect'\nimport TagSelect from './TagSelect'\nfunction Input(props) {\n\n  useEffect(() => {\n  });\n\n  return (\n    <div>\n      <hr/>\n      <TagSelect tag={props.detail.tag} index={props.index} handleTagChange={props.handleListChange}/>\n      <InputTypeSelect index={props.index} type={props.detail.type} handleTypeChange={props.handleListChange}/>\n      {\n        ['id','name','placeHolder','label','class','labelClass','divClass'].map((item,index)=>{\n          return (\n            <div className=\"form-group\" key={'attrs-' + props.index + \"-\" + index}>\n              <div className=\"row\">\n                  <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{item}</label>\n                  <div className=\" col-sm-10\">\n                    <input className=\"form-control\" value={props.detail[item]} type=\"text\" \n                    id={item + \"-\"+  props.index + \"-\" + index} name={item + \"-\"+  props.index + \"-\" + index} \n                    onChange={(e)=>{props.handleListChange(item,props.index,e.target.value)}}/>\n                  </div>\n              </div>\n            </div>\n          )\n        })\n      }\n     \n    </div>\n  );\n}\n\n\nexport default Input;\n","\nimport React , {useEffect} from 'react';\nimport TagSelect from './TagSelect'\nfunction Select(props) {\n\n  useEffect(() => {\n  });\n\n  return (\n    <div>\n      <hr/>\n      <TagSelect tag=\"Select\" index={props.index} handleTagChange={props.handleListChange}/>\n      {\n        ['id','name','label','class','labelClass','divClass'].map((item,index)=>{\n          return (\n            <div className=\"form-group\" key={'attrs-' + props.index + \"-\" + index}>\n              <div className=\"row\">\n                  <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{item}</label>\n                  <div className=\" col-sm-10\">\n                    <input className=\"form-control\" value={props.detail[item]} type=\"text\" \n                    id={item + \"-\"+  props.index + \"-\" + index} name={item + \"-\"+  props.index + \"-\" + index} \n                    onChange={(e)=>{props.handleListChange(item,props.index,e.target.value)}}/>\n                  </div>\n              </div>\n            </div>\n          )\n        })\n      }\n       {\n        props.detail.options.map((item,index)=>{\n          return (\n            <div className=\"row mb-2 pl-3\" key={\"item-\" + index} >\n              {/* { index >= 1 ? \n              <span className=\"col-sm-2\"></span>\n              :null\n              } */}\n              <input className=\"form-control col-sm-10\" value={item} onChange={(e)=>props.handleOptionChange(index,props.index,e.target.value)}/>\n              <div className=\"btn-group col-sm-2\" >\n                <button className=\"btn btn-success\" onClick={()=>{props.onOptionChange(index,props.index,'ADD')}}>+</button>\n                {\n                  props.detail.options.length > 1 ?\n                  <button className=\"btn btn-danger\" onClick={()=>{props.onOptionChange(index,props.index,'REMOVE')}}>-</button>\n                  :null\n                }\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n}\n\n\nexport default Select;\n","\nimport React , {useEffect} from 'react';\nimport TagSelect from './TagSelect'\nfunction Button(props) {\n\n  useEffect(() => {\n  });\n\n  return (\n    <div>\n      <hr/>\n      <TagSelect tag=\"Button\" index={props.index} handleTagChange={props.handleListChange}/>\n      {\n        ['value','type','class','divClass'].map((item,index)=>{\n          return (\n            <div className=\"form-group\" key={'attrs-' + props.index + \"-\" + index}>\n              <div className=\"row\">\n                  <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{item}</label>\n                  <div className=\" col-sm-10\">\n                    <input className=\"form-control\" value={props.detail[item]} type=\"text\" \n                    id={item + \"-\"+  props.index + \"-\" + index} name={item + \"-\"+  props.index + \"-\" + index} \n                    onChange={(e)=>{props.handleListChange(item,props.index,e.target.value)}}/>\n                  </div>\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n}\n\n\nexport default Button;\n","\nimport React , {useEffect} from 'react';\nimport TagSelect from './TagSelect'\nfunction Textarea(props) {\n\n  useEffect(() => {\n  });\n\n  return (\n    <div>\n      <hr/>\n      <TagSelect tag=\"Textarea\" index={props.index} handleTagChange={props.handleListChange}/>\n      {\n        ['id','name','placeHolder','rows','label','class','labelClass','divClass'].map((item,index)=>{\n          return (\n            <div className=\"form-group\" key={'attrs-' + props.index + \"-\" + index}>\n              <div className=\"row\">\n                  <label className=\"col-form-label col-sm-2\" htmlFor=\"key\">{item}</label>\n                  <div className=\" col-sm-10\">\n                    <input className=\"form-control\" value={props.detail[item]} type=\"text\" \n                    id={item + \"-\"+  props.index + \"-\" + index} name={item + \"-\"+  props.index + \"-\" + index} \n                    onChange={(e)=>{props.handleListChange(item,props.index,e.target.value)}}/>\n                  </div>\n              </div>\n            </div>\n          )\n        })\n      }\n    </div>\n  );\n}\n\n\nexport default Textarea;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport FORM from './tags/FORM';\nimport InputDetail from './tagDetail/Input';\nimport SelectDetail from './tagDetail/Select';\nimport ButtonDetail from './tagDetail/Button';\nimport TextareaDetail from './tagDetail/Textarea';\n\nfunction Form() {\n  const [tag, setTag] = useState('form'); \n  const [formList, setForm] = useState([\n    {\n      tag : \"Input\",\n      type : \"text\",\n      id : \"empId\",\n      name : 'empId',\n      placeHolder : 'Employee ID',\n      label : 'ID',\n      class : 'form-control',\n      value : '',\n      labelClass: 'col-form-label',\n      options:[],\n      divClass:\"form-group\" \n    }\n  ]); \n  const [attrs, setAttrs] = useState({\n    class : \"\",\n  }); \n\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n\n  function handleTagChange(tag) {\n    setTag(tag);\n  }\n  function handleListChange(key,index,value) {\n    let newFormList = JSON.parse(JSON.stringify(formList));\n    if(key == \"tag\"){\n      let newInput = initItem[value];\n      newFormList.splice(index,1,newInput);\n    }else{\n      newFormList[index][key] = value;\n    }\n   \n    setForm(newFormList);\n  }\n\n  \n\n  function handleOptionChange(childIndex,index,value) {\n    let newFormList = JSON.parse(JSON.stringify(formList));\n    newFormList[index][\"options\"][childIndex] = value;\n\n    setForm(newFormList);\n\n  }\n  function onOptionChange(childIndex,index,method) {\n    let newFormList = JSON.parse(JSON.stringify(formList));\n\n    if(method == 'ADD'){\n      newFormList[index][\"options\"].splice(childIndex + 1,0,\"\");\n    }\n    if(method == 'REMOVE'){\n      newFormList[index][\"options\"].splice(childIndex,1);\n    }\n    setForm(newFormList);\n  }\n\n  function handleAttrsChange(key,value) {\n    let newAttrs = JSON.parse(JSON.stringify(attrs));\n    newAttrs[key] = value;\n    setAttrs(newAttrs);\n  }\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n\n  function onListChange(method){\n    let newFormList = JSON.parse(JSON.stringify(formList));\n\n    if(method == 'ADD'){\n\n      let newInput = initItem['Input'];\n \n      newFormList.push(newInput);\n\n    }\n    if(method == 'REMOVE'){\n      newFormList.pop();\n    }\n    setForm(newFormList);\n\n  }\n  const initItem = {\n    Input : {\n      tag : \"Input\",\n      type : \"text\",\n      id : \"\",\n      name : '',\n      placeHolder : '',\n      label : 'Input Label',\n      class : 'form-control',\n      value : '',\n      labelClass: 'col-form-label',\n      divClass:\"form-group\" \n    },\n    Button : {\n      tag : \"Button\",\n      type: \"button\", \n      class : 'btn btn-success',\n      value : 'Button',\n      labelClass: 'col-form-label',\n      divClass:\"form-group\" \n    },\n    Textarea : {\n      tag : \"Textarea\",\n      id : \"\",\n      name : '',\n      placeHolder : '',\n      label : 'Teaxtarea Label',\n      class : 'form-control',\n      value : '',\n      rows : 1,\n      labelClass: 'col-form-label',\n      divClass:\"form-group\" \n    },\n    Select : {\n      tag : \"Select\",\n      id : \"\",\n      name : '',\n      label : 'Select Label',\n      class : 'form-control',\n      value : '',\n      options : [\"Option 1\"] ,\n      labelClass: 'col-form-label',\n      divClass:\"form-group\" \n    },\n\n  }\n  const tags =[\n    'form'\n  ];\n  const tagsComponent = {\n    form : FORM,\n  };\n  const detailComponent = {\n    Input : InputDetail,\n    Select : SelectDetail,\n    Textarea : TextareaDetail,\n    Button : ButtonDetail,\n  };\n  \n  function getPreview(){\n    var TagComponent = tagsComponent[tag];\n    return <TagComponent tagRef={tagRef} tagDidMount={tagDidMount} attrs={attrs} formList={formList}\n     handleListChange={handleListChange}/>;\n    \n  }\n\n  function getItemDetail(){\n    let detailList = [] ;\n    formList.map((item,index)=>{\n      let DetailComponent = detailComponent[item.tag];\n      detailList.push(<DetailComponent key={\"detailItem-\" + index } \n      handleListChange={handleListChange} index={index} detail={item}\n      handleOptionChange={handleOptionChange} onOptionChange={onOptionChange}/>);\n    })\n\n    return detailList;\n  }\n  function getDetail(){\n\n    return (\n      <div>\n\n       \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" >Form Input Count</label>\n              <div className=\"col-sm-1\">\n                  <label className=\"col-form-label\" >\n                  {formList.length}\n                  </label>\n              </div>\n              <div className=\"btn-group col-sm-2\" >\n                <button className=\"btn btn-success\" onClick={()=>{onListChange('ADD')}}>+</button>\n                <button className=\"btn btn-danger\" onClick={()=>{onListChange('REMOVE')}}>-</button>\n              </div>\n          </div>\n        </div>\n      \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Tag</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"tags\" id=\"tags\" value={tag}\n                  onChange={(e)=>handleTagChange(e.target.value)}>\n                    {tags.map((tag)=>{\n                      return (<option key={\"option-\" + tag} value={tag} >{tag}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n       \n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">Class</label>\n              <div className=\" col-sm-10\">\n                  <input className=\"form-control\" value={attrs.class} onChange={(e)=>handleAttrsChange('class',e.target.value)}/>\n              </div>\n          </div>\n        </div>    \n\n        {getItemDetail()}\n  \n      </div>\n    );\n  }\n  function getCodeString(){\n    console.log(tagRef);\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        let codeString = tagRef.current.outerHTML;\n        let regexNewLine = /></gi;\n        codeString = codeString.replace(regexNewLine, '>\\n<');\n\n        let divTab = /<div/gi;\n        codeString = codeString.replace(divTab, '\\t<div');\n        divTab = /<\\/div/gi;\n        codeString = codeString.replace(divTab, '\\t</div');\n\n        let inputTab = /<input/gi;\n        codeString = codeString.replace(inputTab, '\\t\\t<input');\n\n        let labelTab = /<label/gi;\n        codeString = codeString.replace(labelTab, '\\t\\t<label');\n        labelTab = /<\\/label/gi;\n        // codeString = codeString.replace(labelTab, '\\t\\t</label');\n\n        let selectTab = /<select/gi;\n        codeString = codeString.replace(selectTab, '\\t\\t<select');\n        selectTab = /<\\/select/gi;\n        codeString = codeString.replace(selectTab, '\\t\\t</select');\n\n        let optionTab = /<option/gi;\n        codeString = codeString.replace(optionTab, '\\t\\t\\t<option');\n        optionTab = /<\\/option/gi;\n        // codeString = codeString.replace(optionTab, '\\t\\t\\t</option');\n\n        let textareaTab = /<textarea/gi;\n        codeString = codeString.replace(textareaTab, '\\t\\t<textarea');\n        // optionTab = /<\\/textarea/gi;\n        // codeString = codeString.replace(textareaTab, '\\t</textarea');\n        let buttonTab = /<button/gi;\n        codeString = codeString.replace(buttonTab, '\\t\\t<button');\n\n\n        let regexRemoveLine = />\\n<\\/option/gi;\n        codeString = codeString.replace(regexRemoveLine, '></option');\n        regexRemoveLine = />\\n<\\/textarea/gi;\n        codeString = codeString.replace(regexRemoveLine, '></textarea');\n        regexRemoveLine = />\\n<\\/label/gi;\n        codeString = codeString.replace(regexRemoveLine, '></label');\n        regexRemoveLine = />\\n<\\/button/gi;\n        codeString = codeString.replace(regexRemoveLine, '></button');\n\n        return codeString;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Form </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n  );\n}\n\n\nexport default Form;","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { tomorrowNight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nfunction CodeView(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          CodeView\n        </div>\n        <div className=\"card-body\">\n          <SyntaxHighlighter wrapLines={true} language=\"html\"\n           style={tomorrowNight} customStyle={{whiteSpace: 'pre-wrap'}}>\n            {props.codeString}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CodeView;\n","import React from 'react';\n\nfunction DetailView(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Detail\n        </div>\n        <div className=\"card-body\">\n            {props.detail}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DetailView;","import React from 'react';\n\nfunction Preview(props) {\n  return (\n    <div className=\"col-12 my-2\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Preview\n        </div>\n        <div className=\"card-body\">\n          {props.preview}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Preview;","import React , {useEffect} from 'react';\n\nfunction COLOR(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <h1 ref={props.tagRef} style={props.styleObj}>COLOR</h1>\n  );\n}\n\n\nexport default COLOR;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport COLOR from './tags/COLOR';\n\nfunction Color() {\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n  const [style, setStyle] = useState({\n    color : \"#ffffff\",\n    backgroundColor : \"black\",\n    borderColor : \"rgb(255,0,0)\",\n    borderStyle : \"solid\",\n    borderWidth : \"2px\"\n  }); \n\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  function handleStyleChange(key,value) {\n    let newStyle = JSON.parse(JSON.stringify(style));\n    newStyle[key] = value;\n    setStyle(newStyle);\n  }\n  function getPreview(){\n    return <COLOR tagRef={tagRef} tagDidMount={tagDidMount} styleObj={style}/>;\n  }\n  function getDetail(){\n    return (\n      <div>\n        {\n          [\"color\",\"backgroundColor\",\"borderColor\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"color-\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style[item]} onChange={(e)=>handleStyleChange(item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n      </div>\n    \n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Color </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Color;\n","import React , {useEffect} from 'react';\n\nfunction TEXT(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <h1 ref={props.tagRef} style={props.styleObj}>{props.value}</h1>\n  );\n}\n\n\nexport default TEXT;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport TEXT from './tags/TEXT';\n\nfunction Text() {\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n  const [style, setStyle] = useState({\n    textAlign : \"center\",\n    textDecoration : \"underline\",\n    textTransform : \"capitalize\",\n    fontSize : \"3em\",\n    fontFamily : '\"Times New Roman\", Times, serif',\n    fontStyle : \"italic\",\n    fontWeight : \"blod\",\n  }); \n  const [value, setValue] = useState(\"Text\"); \n\n  function tagDidMount(){\n    setCodeString(getCodeString());\n  }\n  function handleStyleChange(key,value) {\n    let newStyle = JSON.parse(JSON.stringify(style));\n    newStyle[key] = value;\n    setStyle(newStyle);\n  }\n  function getPreview(){\n    return <TEXT tagRef={tagRef} tagDidMount={tagDidMount} styleObj={style} value={value} setValue={setValue}/>;\n  }\n  function getDetail(){\n    return (\n      <div>\n         <div className=\"form-group\">\n            <div className=\"row\">\n                <label className=\"col-form-label col-sm-2\" htmlFor=\"content\">Content</label>\n                <div className=\" col-sm-10\">\n                  <input type=\"text\" className=\"form-control\" id=\"content\" value={value} onChange={(e)=>setValue(e.target.value)}/>\n                </div>\n                \n            </div>\n          </div>\n        {\n          [\"fontSize\",\"fontFamily\",\"fontWeight\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"color-\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" htmlFor=\"tags\">{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style[item]} onChange={(e)=>handleStyleChange(item,e.target.value)}/>\n                      {\n                     item == \"fontFamily\" \n                     ? <span className=\"text-right text-muted\">serif,sans-serif,monospace,cursive,fantasy,system-ui,emoji,math,fangsong</span>\n                     :null\n                    }\n                    </div>\n                   \n                </div>\n             </div>\n            )\n          })\n        }\n\n         <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"textAlign\">textAlign</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"textAlign\" id=\"textAlign\" value={style.textAlign}\n                  onChange={(e)=>handleStyleChange(\"textAlign\",e.target.value)}>\n                    {['right','center','left'].map((item)=>{\n                      return (<option key={\"option-textAlign-\" + item} value={item} >{item}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"textDecoration\">textDecoration</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"textDecoration\" id=\"textDecoration\" value={style.textDecoration}\n                  onChange={(e)=>handleStyleChange(\"textDecoration\",e.target.value)}>\n                    {['none','underline','line-through','overline'].map((item)=>{\n                      return (<option key={\"option-textDecoration-\" + item} value={item} >{item}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"textTransform\">textTransform</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"textTransform\" id=\"textTransform\" value={style.textTransform}\n                  onChange={(e)=>handleStyleChange(\"textTransform\",e.target.value)}>\n                    {['none','capitalize','uppercase','lowercase'].map((item)=>{\n                      return (<option key={\"option-textTransform-\" + item} value={item} >{item}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"fontStyle\">fontStyle</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"fontStyle\" id=\"fontStyle\" value={style.fontStyle}\n                  onChange={(e)=>handleStyleChange(\"fontStyle\",e.target.value)}>\n                    {['unset','italic'].map((item)=>{\n                      return (<option key={\"option-fontStyle-\" + item} value={item} >{item}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n  function getCodeString(){\n    if(tagRef.current){\n      if(tagRef.current.outerHTML){\n        return tagRef.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3> Color </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default Text;\n","import React , {useEffect} from 'react';\n\nfunction BORDER(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <div>\n      <button className=\"btn\" ref={props.tagRef1} style={props.styleObj.btn1}>\n          Button 1\n      </button>\n      <hr/>\n      <button className=\"btn\" ref={props.tagRef2} style={props.styleObj.btn2}>\n          Button 2\n      </button>\n      <hr/>\n      <button className=\"btn\" ref={props.tagRef3} style={props.styleObj.btn3}>\n          Button 3\n      </button>\n    </div>\n\n  );\n}\n\n\nexport default BORDER;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport BORDER from './tags/BORDER';\n\nfunction Border() {\n  const [codeString1, setCodeString1] = useState(''); \n  const [codeString2, setCodeString2] = useState(''); \n  const [codeString3, setCodeString3] = useState(''); \n  const tagRef1 = React.createRef();\n  const tagRef2 = React.createRef();\n  const tagRef3 = React.createRef();\n  const [style, setStyle] = useState({ \n    btn1:{\n      borderTopStyle : \"\",\n      borderTopColor : \"black\",\n      borderTopWidth : \"5px\",\n      // borderRightStyle : \"dotted\",\n      // borderRightColor : \"blue\",\n      // borderRightWidth : \"3px\",\n      // borderBottomStyle : \"solid\",\n      // borderBottomColor : \"red\",\n      // borderBottomWidth : \"2px\",\n      // borderLeftStyle : \"double\",\n      // borderLeftColor : \"yellow\",\n      // borderLeftWidth : \"4px\",\n    },\n    btn2:{\n      borderStyle : \"dashed dotted solid double\",\n      borderColor : \"black blue red orange\",\n      borderWidth : \"1px 3px 2px 4px\",\n    },\n    btn3:{\n      border : \"solid black 2px\",\n      borderRadius : \"3px 1px 5px 10px\"\n    }\n   \n  }); \n  const [value, setValue] = useState(\"Text\"); \n\n  function tagDidMount(){\n    setCodeString1(getCodeString(tagRef1));\n    setCodeString2(getCodeString(tagRef2));\n    setCodeString3(getCodeString(tagRef3));\n  }\n  function handleStyleChange(btn,key,value) {\n    let newStyle = JSON.parse(JSON.stringify(style));\n    newStyle[btn][key] = value;\n    setStyle(newStyle);\n  }\n  function getPreview(){\n    return <BORDER tagRef1={tagRef1} tagRef2={tagRef2}  tagRef3={tagRef3} tagDidMount={tagDidMount} styleObj={style} value={value} setValue={setValue}/>;\n  }\n  function getDetail(){\n    return (\n      <div>\n        <h4>Button 1</h4>\n        {\n          [\"borderTopColor\",\"borderTopWidth\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"border-btn1\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" htmlFor=\"borderTopWidth\">{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style['btn1'][item]} onChange={(e)=>handleStyleChange('btn1',item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n         <div className=\"form-group\">\n          <div className=\"row\">\n              <label className=\"col-form-label col-sm-2\" htmlFor=\"textAlign\">borderTopStyle</label>\n              <div className=\" col-sm-10\">\n                  <select className=\"form-control\" name=\"borderTopStyle\" id=\"borderTopStyle\" value={style.btn1.borderTopStyle}\n                  onChange={(e)=>handleStyleChange(\"btn1\",\"borderTopStyle\",e.target.value)}>\n                    {['','solid','dashed','dotted','double','groove','ridge','inset','outset'].map((item)=>{\n                      return (<option key={\"option-textAlign-\" + item} value={item} >{item}</option>)\n                    })}\n                  </select>\n              </div>\n          </div>\n        </div>\n        <hr/>\n        <h4>Button 2</h4>\n        {\n          [\"borderColor\",\"borderWidth\",\"borderStyle\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"border-btn2\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" htmlFor=\"borderTopWidth\"> {item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style['btn2'][item]} onChange={(e)=>handleStyleChange('btn2',item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n\n        <hr/>\n        <h4>Button 3</h4>\n        {\n          [\"border\",\"borderRadius\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"border-btn3-\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" htmlFor=\"borderTopWidth\">{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style['btn3'][item]} onChange={(e)=>handleStyleChange('btn3',item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n\n      </div>\n    );\n  }\n  function getCodeString(ref){\n    if(ref.current){\n      if(ref.current.outerHTML){\n        return ref.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3 className=\"col-12\"> Border </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString1}/>\n        <CodeView codeString={codeString2}/>\n        <CodeView codeString={codeString3}/>\n    </div>\n\n  );\n}\n\n\nexport default Border;\n","import React , {useEffect} from 'react';\n\nfunction MARGIN(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <div>\n      <div style={{border: \"black 3px dashed\"}}>\n        <button className=\"btn\" ref={props.tagRef1} style={props.styleObj.btn1}>\n            Button 1\n        </button>\n      </div>\n     \n      <hr/>\n      <div style={{border: \"black 3px dashed\"}}>\n        <button className=\"btn\" ref={props.tagRef2} style={props.styleObj.btn2}>\n            Button 2\n        </button>\n      </div>\n  \n    </div>\n\n  );\n}\n\n\nexport default MARGIN;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport MARGIN from './tags/MARGIN';\n\nfunction Margin() {\n  const [codeString1, setCodeString1] = useState(''); \n  const [codeString2, setCodeString2] = useState(''); \n  const tagRef1 = React.createRef();\n  const tagRef2 = React.createRef();\n  const [style, setStyle] = useState({ \n    btn1:{\n      border : \"solid 2px red\",\n      marginTop : \"2px\",\n      marginRight : \"10px\",\n      marginBottom : \"20px\",\n      marginLeft : \"50px\",\n    },\n    btn2:{\n      border : \"solid 2px red\",\n      margin : \"2px 10px 20px 50px\"\n    }\n   \n  }); \n  const [value, setValue] = useState(\"Text\"); \n\n  function tagDidMount(){\n    setCodeString1(getCodeString(tagRef1));\n    setCodeString2(getCodeString(tagRef2));\n  }\n  function handleStyleChange(btn,key,value) {\n    let newStyle = JSON.parse(JSON.stringify(style));\n    newStyle[btn][key] = value;\n    setStyle(newStyle);\n  }\n  function getPreview(){\n    return <MARGIN tagRef1={tagRef1} tagRef2={tagRef2} tagDidMount={tagDidMount} styleObj={style} value={value} setValue={setValue}/>;\n  }\n  function getDetail(){\n    return (\n      <div>\n        <h4>Button 1</h4>\n        {\n          [\"marginTop\",\"marginRight\",\"marginBottom\",\"marginLeft\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"border-btn1\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" htmlFor=\"borderTopWidth\">{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style['btn1'][item]} onChange={(e)=>handleStyleChange('btn1',item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n        <hr/>\n        <h4>Button 2</h4>\n        {\n          [\"margin\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"border-btn2\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" htmlFor=\"btn2-margin\">{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style['btn2'][item]} onChange={(e)=>handleStyleChange('btn2',item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n\n      \n\n      </div>\n    );\n  }\n  function getCodeString(ref){\n    if(ref.current){\n      if(ref.current.outerHTML){\n        return ref.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3 className=\"col-12\"> Margin </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString1}/>\n        <CodeView codeString={codeString2}/>\n    </div>\n\n  );\n}\n\n\nexport default Margin;\n","import React , {useEffect} from 'react';\n\nfunction PADDING(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <div>\n      <div style={{border: \"black 3px dashed\"}}>\n        <button className=\"\" ref={props.tagRef1} style={props.styleObj.btn1}>\n            Button 1\n        </button>\n      </div>\n     \n      <hr/>\n      <div style={{border: \"black 3px dashed\"}}>\n        <button className=\"\" ref={props.tagRef2} style={props.styleObj.btn2}>\n            Button 2\n        </button>\n      </div>\n  \n    </div>\n\n  );\n}\n\n\nexport default PADDING;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport PADDING from './tags/PADDING';\n\nfunction Padding() {\n  const [codeString1, setCodeString1] = useState(''); \n  const [codeString2, setCodeString2] = useState(''); \n  const tagRef1 = React.createRef();\n  const tagRef2 = React.createRef();\n  const [style, setStyle] = useState({ \n    btn1:{\n      border : \"solid 2px red\",\n      paddingTop : \"2px\",\n      paddingRight : \"10px\",\n      paddingBottom : \"20px\",\n      paddingLeft : \"50px\",\n    },\n    btn2:{\n      border : \"solid 2px red\",\n      padding : \"2px 10px 20px 50px\"\n    }\n   \n  }); \n  const [value, setValue] = useState(\"Text\"); \n\n  function tagDidMount(){\n    setCodeString1(getCodeString(tagRef1));\n    setCodeString2(getCodeString(tagRef2));\n  }\n  function handleStyleChange(btn,key,value) {\n    let newStyle = JSON.parse(JSON.stringify(style));\n    newStyle[btn][key] = value;\n    setStyle(newStyle);\n  }\n  function getPreview(){\n    return <PADDING tagRef1={tagRef1} tagRef2={tagRef2} tagDidMount={tagDidMount} styleObj={style} value={value} setValue={setValue}/>;\n  }\n  function getDetail(){\n    return (\n      <div>\n        <h4>Button 1</h4>\n        {\n          [\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"border-btn1\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" >{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style['btn1'][item]} onChange={(e)=>handleStyleChange('btn1',item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n        <hr/>\n        <h4>Button 2</h4>\n        {\n          [\"padding\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"border-btn2\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" htmlFor=\"btn2-margin\">{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style['btn2'][item]} onChange={(e)=>handleStyleChange('btn2',item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n\n      \n\n      </div>\n    );\n  }\n  function getCodeString(ref){\n    if(ref.current){\n      if(ref.current.outerHTML){\n        return ref.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3 className=\"col-12\"> Padding </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString1}/>\n        <CodeView codeString={codeString2}/>\n    </div>\n\n  );\n}\n\n\nexport default Padding;\n","import React , {useEffect} from 'react';\n\nfunction WH(props) {\n\n  useEffect(() => {\n    props.tagDidMount();\n  });\n\n  return (\n    <div>\n      <div ref={props.tagRef} style={props.styleObj}>\n          <h3>Width / Height</h3>\n      </div>\n    </div>\n\n  );\n}\n\n\nexport default WH;\n","import React , { useState , useEffect} from 'react';\nimport CodeView from '../codeView/CodeView';\nimport DetailView from '../detailView/DetailView';\nimport Preview from '../preview/Preview';\nimport WH from './tags/WH';\n\nfunction WightHeight() {\n  const [codeString, setCodeString] = useState(''); \n  const tagRef = React.createRef();\n  const [style, setStyle] = useState({ \n    width: \"50%\",\n    height : \"200px\",\n    border: \"black 3px dashed\"\n  }); \n  const [value, setValue] = useState(\"Text\"); \n\n  function tagDidMount(){\n    setCodeString(getCodeString(tagRef));\n  }\n  function handleStyleChange(key,value) {\n    let newStyle = JSON.parse(JSON.stringify(style));\n    newStyle[key] = value;\n    setStyle(newStyle);\n  }\n  function getPreview(){\n    return <WH tagRef={tagRef}  tagDidMount={tagDidMount} styleObj={style} value={value} setValue={setValue}/>;\n  }\n  function getDetail(){\n    return (\n      <div>\n        {\n          [\"height\",\"width\"].map((item)=>{\n            return (\n              <div className=\"form-group\" key={\"wh\" + item}>\n                <div className=\"row\">\n                    <label className=\"col-form-label col-sm-2\" >{item}</label>\n                    <div className=\" col-sm-10\">\n                      <input type=\"text\" className=\"form-control\" value={style[item]} onChange={(e)=>handleStyleChange(item,e.target.value)}/>\n                    </div>\n                </div>\n             </div>\n            )\n          })\n        }\n       \n\n      \n\n      </div>\n    );\n  }\n  function getCodeString(ref){\n    if(ref.current){\n      if(ref.current.outerHTML){\n        return ref.current.outerHTML;\n      }\n    }\n    return \"\";\n  }\n\n  return (\n    <div className=\"row py-3 col-12\">\n        <h3 className=\"col-12\"> Wight / Height </h3>\n        <DetailView detail={getDetail()}/>\n        <Preview preview={getPreview()}/>\n        <CodeView codeString={codeString}/>\n    </div>\n\n  );\n}\n\n\nexport default WightHeight;\n","import React , { useEffect }from 'react';\n\n\nimport {\n    Link\n} from \"react-router-dom\";\n\n// componentDidMount() {\n//     $('[data-toggle=\"tooltip\"]').tooltip();\n//   }\n  \n//   componentDidUpdate() {\n//     \n//   }\n\n\nfunction ProjectView() {\n\n\n  return (\n    <main role=\"main\" className=\"\">\n      <div className=\"\">\n        <div className=\"row\">\n\n            \n            <div className=\"text-center cover-container w-100 p-3 mx-auto flex-column col-lg-12\">\n                <div className=\"inner cover\">\n                    <Link to={\"/html/Image\"}>\n                         <img className=\"rounded-circle\" width=\"140\" height=\"140\" src=\"https://img.bobowin.blog/uploads/20190320152911_6.jpg\"\n                         alt=\"myPhoto\"/>\n                    </Link>\n                    <Link to={\"/html/Heading\"} style={{color:\"black\"}}>\n                        <h1 className=\"cover-heading\"> Charlie </h1>\n                    </Link>\n                    <Link to={\"/html/Heading\"} style={{color:\"black\"}}>\n                        <h4> Infomation System </h4>\n                    </Link>\n                    <Link to={\"/html/Photography\"} style={{color:\"black\"}}>\n                        <p className=\"lead\">Hello! My name is Charlie. <br/>I'm a <span>Full-stack</span> developer for Website and iOS Application. </p>\n                    </Link>\n                    <hr/>\n                    <Link to={\"/html/Link\"} >\n                        <a  target=\"_blank\" >Learn more</a>\n                    </Link>\n                </div>\n            </div>\n            {/* <!-- col-12 --> */}\n\n\n            <div className=\"col-lg-6\">\n                <Link to={\"/html/List\"} >\n                    <div className=\"card\" >\n                        <div className=\"card-header\">\n                            <h2 className=\"text-secondary\">Ability</h2>\n                        </div>\n                        <div className=\"card-body pl-4 py-2\">\n                            <ul className=\"list-group list-group-flush\">\n                                <li className=\"list-group-item text-secondary\">Front-end develop</li>\n                                <li className=\"list-group-item text-secondary\">Back-end develop</li>\n                                <li className=\"list-group-item text-secondary\">iOS app develop</li>\n                            </ul>\n                        </div>\n                    </div>\n                </Link>\n            </div>\n            {/* <!-- col-6 --> */}\n\n\n            <div className=\"col-lg-6\">\n                 <Link to={\"/html/List\"} >\n                    <div className=\"card\" >\n                        <div className=\"card-header\">\n                            <h2 className=\"text-secondary\">Hobbies</h2>\n                        </div>\n                        <div className=\"card-body pl-4 py-2\">\n                            <ol className=\"list-group list-group-flush\" >\n                                <li className=\"list-group-item text-secondary\">Diving</li>\n                                <li className=\"list-group-item text-secondary\">Snow-boarding</li>\n                                <li className=\"list-group-item text-secondary\">Photography</li>\n                            </ol>\n                        </div>\n                    </div>\n                </Link>\n            </div> \n            {/* <!-- col-6 --> */}\n\n\n            <div className=\"col-lg-12 mt-5 \">\n                <Link to={\"/html/Table\"} style={{color:\"black\"}}>\n                <table className=\"table table-dark table-responsive-sm\">\n\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>No.</th>\n                            <th>DEPT</th>\n                            <th>Date</th>\n                            <th>Comment</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <th>1</th>\n                            <td>WZ</td>\n                            <td>12435</td>\n                            <td>BS DEPT</td>\n                            <td>2019-09-30</td>\n                            <td>Hello Charlie!</td>\n                        </tr>\n                        <tr>\n                            <th>2</th>\n                            <td>GG</td>\n                            <td>67890</td>\n                            <td>SALES DEPT</td>\n                            <td>2019-10-01</td>\n                            <td>Hey!Charlie~</td>\n                        </tr>\n                    </tbody>\n\n                </table>\n                </Link>\n            </div>\n            {/* <!-- col-12 --> */}\n\n            <div className=\"col-lg-12 mt-5\">\n                 <Link to={\"/html/Form\"} style={{color:\"black\"}}>\n                <form>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"commentName\" className=\"col-sm-2 col-form-label\">Name</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"text\" className=\"form-control\" name=\"name\" id=\"commentName\" placeholder=\"Name\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"id\" className=\"col-sm-2 col-form-label\">No.</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"number\" className=\"form-control\" name=\"no\" id=\"no\" placeholder=\"No.\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group \">\n                            <div className=\"row\">\n                                <label className=\"col-form-label col-sm-2\" htmlFor=\"dept \">Dept</label>\n                                <div className=\" col-sm-10\">\n                                    <select className=\"form-control\" name=\"dept\" id=\"dept\">\n                                        <option>BS DEPT</option>\n                                        <option>SALES DEPT</option>\n                                        <option>SALES OPERATION DEPT</option>\n                                        <option>TECH DEPT</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"commentDate\" className=\"col-sm-2 col-form-label\">Date</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"date\" className=\"form-control\" min=\"2019-09-01\" name=\"date\" id=\"commentDate\" placeholder=\"Date\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"row\">\n                            <legend className=\"col-form-label col-sm-2 pt-0\">Sax</legend>\n                            <div className=\"col-sm-10\">\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"sexRadios\" id=\"saxRadios1\" value=\"Male\" checked/>\n                                    <label className=\"form-check-label\" htmlFor=\"saxRadios1\">\n                                        Male\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"sexRadios\" id=\"saxRadios2\" value=\"Female\"/>\n                                    <label className=\"form-check-label\" htmlFor=\"saxRadios2\">\n                                        Female\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label className=\"col-form-label col-sm-2\" htmlFor=\"anonymous \">Anonymous</label>\n                        <div className=\"col-sm-10\">\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"anonymous\" name=\"anonymous\"/>\n                                <label className=\"form-check-label\" htmlFor=\"Anonymous\">\n                                    Yes\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"comment\" className=\"col-sm-2 col-form-label\">Comment</label>\n                        <div className=\"col-sm-10\">\n                            <textarea className=\"form-control\" id=\"comment\" name=\"comment\" rows=\"10\" placeholder=\"comment\"></textarea>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <div className=\"col-12\">\n                        <button type=\"submit\" className=\"btn btn-info btn-block\">Comment</button>\n                        </div>\n                    </div>\n                </form>\n                </Link>\n            </div> \n            {/* <!-- col-12 -->  */}\n\n\n        </div>\n        {/* <!-- row --> */}\n    </div>\n    {/* <!-- container --> */}\n    </main>\n\n  );\n}\n\nexport default ProjectView;\n","import React from 'react';\nimport Heading from '../../components/heading/Heading';\nimport Paragraph from '../../components/paragraph/Paragraph';\nimport Image from '../../components/image/Image';\nimport Link from '../../components/link/Link';\nimport List from '../../components/list/List';\nimport Table from '../../components/table/Table';\nimport Form from '../../components/form/Form';\nimport Color from '../../cssComponents/color/Color';\nimport Text from '../../cssComponents/text/Text';\nimport Border from '../../cssComponents/border/Border';\nimport Margin from '../../cssComponents/margin/Margin';\nimport Padding from '../../cssComponents/padding/Padding';\nimport WightHeight from '../../cssComponents/wightHeight/WightHeight';\nimport ProjectView from './ProjectView';\n\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\n\n\nfunction MainView() {\n  return (\n    <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n      <div className=\"container\">\n        <div className=\"row\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <ProjectView/>\n                </Route>\n                <Route path=\"/html/Heading\">\n                    <Heading/>\n                </Route>\n                <Route path=\"/html/Paragraphs\">\n                    <Paragraph/>\n                </Route>\n                <Route path=\"/html/Image\">\n                    <Image/>\n                </Route>\n                <Route path=\"/html/Link\">\n                    <Link/>\n                </Route>\n                <Route path=\"/html/List\">\n                    <List/>\n                </Route>\n                <Route path=\"/html/Table\">\n                    <Table/>\n                </Route>\n                <Route path=\"/html/Form\">\n                    <Form/>\n                </Route>\n                <Route path=\"/css/Color\">\n                    <Color/>\n                </Route>\n                <Route path=\"/css/Text\">\n                    <Text/>\n                </Route>\n                <Route path=\"/css/Border\">\n                    <Border/>\n                </Route>\n                <Route path=\"/css/Margin\">\n                    <Margin/>\n                </Route>\n                <Route path=\"/css/Padding\">\n                    <Padding/>\n                </Route>\n                <Route path=\"/css/WightHeight\">\n                    <WightHeight/>\n                </Route>\n                <Redirect to=\"/\"/>\n            </Switch>\n            \n            {/* <div className=\"text-center cover-container w-100 p-3 mx-auto flex-column col-lg-12\">\n                <div className=\"inner cover\">\n                    <img className=\"rounded-circle\" width=\"140\" height=\"140\" src=\"https://img.bobowin.blog/uploads/20190320152911_6.jpg\" alt=\"myPhoto\"/>\n                    <h1 className=\"cover-heading\"> Charlie </h1>\n                    <h4> Infomation System </h4>\n                    <p className=\"lead\">Hello! My name is Charlie. <br/>I'm a <span>Full-stack</span> developer for Website and iOS Application. </p>\n                    <hr/>\n                    <a href=\"#\" target=\"_blank\" >Learn more</a>\n                </div>\n            </div>\n            {/* <!-- col-12 --> */}\n\n\n            {/* <div className=\"col-lg-6\">\n                <div className=\"card\" >\n                    <div className=\"card-header\">\n                        <h2 className=\"text-secondary\">Ability</h2>\n                    </div>\n                    <div className=\"card-body pl-4 py-2\">\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item text-secondary\">Front-end develop</li>\n                            <li className=\"list-group-item text-secondary\">Back-end develop</li>\n                            <li className=\"list-group-item text-secondary\">iOS app develop</li>\n                        </ul>\n                    </div>\n                </div>\n            </div> */}\n            {/* <!-- col-6 --> */}\n\n{/* \n            <div className=\"col-lg-6\">\n                <div className=\"card\" >\n                    <div className=\"card-header\">\n                        <h2 className=\"text-secondary\">Hobbies</h2>\n                    </div>\n                    <div className=\"card-body pl-4 py-2\">\n                        <ol className=\"list-group list-group-flush\" >\n                            <li className=\"list-group-item text-secondary\">Diving</li>\n                            <li className=\"list-group-item text-secondary\">Snow-boarding</li>\n                            <li className=\"list-group-item text-secondary\">Photography</li>\n                        </ol>\n                    </div>\n                </div>\n            </div> */}\n            {/* <!-- col-6 --> */}\n\n\n            {/* <div className=\"col-lg-12 mt-5 \">\n                <table className=\"table table-dark table-responsive-sm\">\n\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>No.</th>\n                            <th>DEPT</th>\n                            <th>Date</th>\n                            <th>Comment</th>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <th>1</th>\n                            <td>WZ</td>\n                            <td>12435</td>\n                            <td>BS DEPT</td>\n                            <td>2019-09-30</td>\n                            <td>Hello Charlie!</td>\n                        </tr>\n                        <tr>\n                            <th>2</th>\n                            <td>GG</td>\n                            <td>67890</td>\n                            <td>SALES DEPT</td>\n                            <td>2019-10-01</td>\n                            <td>Hey!Charlie~</td>\n                        </tr>\n                    </tbody>\n\n                </table>\n            </div> */}\n            {/* <!-- col-12 --> */}\n{/* \n            <div className=\"col-lg-12 mt-5\">\n                <form>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"commentName\" className=\"col-sm-2 col-form-label\">Name</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"text\" className=\"form-control\" name=\"name\" id=\"commentName\" placeholder=\"Name\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"id\" className=\"col-sm-2 col-form-label\">No.</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"number\" className=\"form-control\" name=\"no\" id=\"no\" placeholder=\"No.\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group \">\n                            <div className=\"row\">\n                                <label className=\"col-form-label col-sm-2\" htmlFor=\"dept \">Dept</label>\n                                <div className=\" col-sm-10\">\n                                    <select className=\"form-control\" name=\"dept\" id=\"dept\">\n                                        <option>BS DEPT</option>\n                                        <option>SALES DEPT</option>\n                                        <option>SALES OPERATION DEPT</option>\n                                        <option>TECH DEPT</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"commentDate\" className=\"col-sm-2 col-form-label\">Date</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"date\" className=\"form-control\" min=\"2019-09-01\" name=\"date\" id=\"commentDate\" placeholder=\"Date\"/>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"row\">\n                            <legend className=\"col-form-label col-sm-2 pt-0\">Sax</legend>\n                            <div className=\"col-sm-10\">\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"sexRadios\" id=\"saxRadios1\" value=\"Male\" checked/>\n                                    <label className=\"form-check-label\" htmlFor=\"saxRadios1\">\n                                        Male\n                                    </label>\n                                </div>\n                                <div className=\"form-check\">\n                                    <input className=\"form-check-input\" type=\"radio\" name=\"sexRadios\" id=\"saxRadios2\" value=\"Female\"/>\n                                    <label className=\"form-check-label\" htmlFor=\"saxRadios2\">\n                                        Female\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label className=\"col-form-label col-sm-2\" htmlFor=\"anonymous \">Anonymous</label>\n                        <div className=\"col-sm-10\">\n                            <div className=\"form-check\">\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"anonymous\" name=\"anonymous\"/>\n                                <label className=\"form-check-label\" htmlFor=\"Anonymous\">\n                                    Yes\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"comment\" className=\"col-sm-2 col-form-label\">Comment</label>\n                        <div className=\"col-sm-10\">\n                            <textarea className=\"form-control\" id=\"comment\" name=\"comment\" rows=\"10\" placeholder=\"comment\"></textarea>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <div className=\"col-12\">\n                        <button type=\"submit\" className=\"btn btn-info btn-block\">Comment</button>\n                        </div>\n                    </div>\n                </form>\n            </div> */}\n            {/* <!-- col-12 -->  */}\n\n\n        </div>\n        {/* <!-- row --> */}\n    </div>\n    {/* <!-- container --> */}\n    </main>\n\n  );\n}\n\nexport default MainView;\n","import React from 'react';\nimport Navbar from '../layout/navBar/Navbar';\nimport SideMenu from '../layout/sideMenu/SideMenu';\nimport MainView from '../layout/mainView/MainView';\nimport {\n  HashRouter as Router,\n} from \"react-router-dom\";\n\nfunction Home() {\n  return (\n\n  <div>\n    <Router path={process.env.PUBLIC_URL}>\n\n    <Navbar/>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <SideMenu componentList={componentList}/>\n          <MainView/>\n        </div>\n      </div>\n    </Router>\n  </div>\n\n  );\n}\nconst componentList = {\n  html : [\n    {\n      type : 'Heading',\n      tagList : [\n        'h1','h2','h3','h4','h5','h6'\n      ],\n      abbrList : []\n    },\n    {\n      type : 'Paragraphs',\n      tagList : ['p'],\n      abbrList : []\n    }, \n    {\n      type : 'Image',\n      tagList : ['img'],\n      abbrList : []\n    },\n    {\n      type : 'Link',\n      tagList : ['a'],\n      abbrList : []\n    },  \n    {\n\n      type : 'List',\n      tagList : ['ul','ol','li'],\n      abbrList : []\n    }, \n    {\n      type : 'Table',\n      tagList : ['table','thead','tbody','tfoot','tr','th','td'],\n      abbrList : []\n    }, \n    {\n      type : 'Form',\n      tagList : ['form','label','input','select','textarea','button'],\n      abbrList : []\n    }, \n    // {\n    //   type : 'Other',\n    //   tagList : ['br','hr','div','span'],\n    //   abbrList : []\n    // }\n  ],\n  css :[\n    {\n      type : 'Color',\n      tagList : ['color','background-color','rgb','rgba','#'],\n      abbrList : []\n    },\n    {\n      type : 'Text',\n      tagList : ['align','decoration','transformation','size','font','text','family','weight','style'],\n      abbrList : []\n    },\n    {\n      type : 'Border',\n      tagList : ['style','width','color','right','top','left','bottom'],\n      abbrList : []\n    },\n    {\n      type : 'Margin',\n      tagList : ['margin','right','top','left','bottom'],\n      abbrList : []\n    },\n    {\n      type : 'Padding',\n      tagList : ['padding','right','top','left','bottom'],\n      abbrList : []\n    },\n    {\n      type : 'WightHeight',\n      tagList : ['height','width'],\n      abbrList : []\n    },\n    // {\n    //   type : 'Display',\n    //   tagList : ['display','block','inline','grid','flex','none','hidden'],\n    //   abbrList : []\n    // },\n    // {\n    //   type : 'Overflow',\n    //   tagList : ['overflow','text-overflow'],\n    //   abbrList : []\n    // },\n    // {\n    //   type : 'Float',\n    //   tagList : ['float','right','left'],\n    //   abbrList : []\n    // },\n    // {\n    //   type : 'Row',\n    //   tagList : ['row','col','md','xl','sm'],\n    //   abbrList : []\n    // },\n\n  ]\n}\n\nexport default Home;\n","import React from 'react';\nimport Home from './home/Home'\nfunction App() {\n  return (\n    <div>\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './dashboard.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}